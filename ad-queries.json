{
  "queries": [
    {
      "name": "List all AddKeyCredentialLink privileges for owned principals",
      "description": "List all AddKeyCredentialLink privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:AddKeyCredentialLink]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all AddKeyCredentialLink privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all AddKeyCredentialLink privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:AddKeyCredentialLink]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all AddMember privileges for owned principals",
      "description": "List all AddMember privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:AddMember]->(m:Group)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all AddMember privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all AddMember privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:AddMember]->(m:Group)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all AddSelf privileges for owned principals",
      "description": "List all AddSelf privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:AddSelf]->(m:Group)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all AddSelf privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all AddSelf privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:AddSelf]->(m:Group)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all AdminTo privileges for owned principals",
      "description": "List all AdminTo privileges for owned principals - General",
      "query": "MATCH p=(m {owned: true})-[r:AdminTo]->(n:Computer)\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all AdminTo privileges for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all AdminTo privileges for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=(m:Group)-[r:AdminTo]->(n:Computer)\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all AdminTo privileges to Domain Controllers",
      "description": "List all AdminTo privileges to Domain Controllers - General",
      "query": "MATCH p=(m)-[:AdminTo]->(n:Computer)-[:MemberOf]->(g:Group)\nWHERE g.objectid =~ \"(?i)S-1-5-21-.*-516\"\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all AllExtendedRights privileges for owned principals",
      "description": "List all AllExtendedRights privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:AllExtendedRights]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all AllExtendedRights privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all AllExtendedRights privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:AllExtendedRights]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all AllowedToAct privileges for owned principals",
      "description": "List all AllowedToAct privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:AllowedToAct]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all AllowedToAct privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all AllowedToAct privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:AllowedToAct]->(m:Computer)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all AS-REP roastable users",
      "description": "List all AS-REP roastable users - General",
      "query": "MATCH (u:User {dontreqpreauth: true})\nRETURN u AS result\nORDER BY u.name"
    },
    {
      "name": "List all AS-REP roastable users for owned principals",
      "description": "List all AS-REP roastable users for owned principals - General",
      "query": "MATCH (u:User {dontreqpreauth: true, owned: true})\nRETURN u AS result\nORDER BY u.name"
    },
    {
      "name": "List all CanPSRemote privileges for owned principals",
      "description": "List all CanPSRemote privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:CanPSRemote]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all CanPSRemote privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all CanPSRemote privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:CanPSRemote]->(m:Computer)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer AddKeyCredentialLink privileges",
      "description": "List all computer AddKeyCredentialLink privileges - General",
      "query": "MATCH p=(n:Computer)-[r:AddKeyCredentialLink]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer AddMember privileges",
      "description": "List all computer AddMember privileges - General",
      "query": "MATCH p=(n:Computer)-[r:AddMember]->(m:Group)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer AddSelf privileges",
      "description": "List all computer AddSelf privileges - General",
      "query": "MATCH p=(n:Computer)-[r:AddSelf]->(m:Group)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer AdminTo privileges",
      "description": "List all computer AdminTo privileges - General",
      "query": "MATCH p=(m:Computer)-[r:AdminTo]->(n:Computer)\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all computer AllExtendedRights privileges",
      "description": "List all computer AllExtendedRights privileges - General",
      "query": "MATCH p=(n:Computer)-[r:AllExtendedRights]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer AllowedToAct privileges",
      "description": "List all computer AllowedToAct privileges - General",
      "query": "MATCH p=(n:Computer)-[r:AllowedToAct]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer CanPSRemote privileges",
      "description": "List all computer CanPSRemote privileges - General",
      "query": "MATCH p=(n:Computer)-[r:CanPSRemote]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer Constrained Delegation",
      "description": "List all computer Constrained Delegation - General",
      "query": "MATCH p=(c1:Computer)-[:AllowedToDelegate]->(c2:Computer)\nRETURN p\nORDER BY c1.name"
    },
    {
      "name": "List all computer cross-domain DCSync privileges",
      "description": "List all computer cross-domain DCSync privileges - General",
      "query": "MATCH p=(n:Computer)-[r:DCSync|AllExtendedRights|GenericAll]->(m:Domain)\nWHERE n.domain <> m.name\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer DCSync privileges",
      "description": "List all computer DCSync privileges - General",
      "query": "MATCH p=(n:Computer)-[r:DCSync|AllExtendedRights|GenericAll]->(m:Domain)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer DumpSMSAPassword privileges",
      "description": "List all computer DumpSMSAPassword privileges - General",
      "query": "MATCH p=(n:Computer)-[r:DumpSMSAPassword]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer ExecuteDCOM privileges",
      "description": "List all computer ExecuteDCOM privileges - General",
      "query": "MATCH p=(n:Computer)-[r:ExecuteDCOM]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer ForceChangePassword privileges",
      "description": "List all computer ForceChangePassword privileges - General",
      "query": "MATCH p=(n:Computer)-[r:ForceChangePassword]->(m:User)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer GenericAll privileges",
      "description": "List all computer GenericAll privileges - General",
      "query": "MATCH p=(n:Computer)-[r:GenericAll]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer GenericWrite privileges",
      "description": "List all computer GenericWrite privileges - General",
      "query": "MATCH p=(n:Computer)-[r:GenericWrite]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer HasSIDHistory privileges",
      "description": "List all computer HasSIDHistory privileges - General",
      "query": "MATCH p=(n:Computer)-[r:HasSIDHistory]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer memberships",
      "description": "List all computer memberships - General",
      "query": "MATCH p=(n:Computer)-[r:MemberOf]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer Owns privileges",
      "description": "List all computer Owns privileges - General",
      "query": "MATCH p=(n:Computer)-[r:Owns]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer privileges",
      "description": "List all computer privileges - General",
      "query": "MATCH p=(n:Computer)-[r]->(m)\nRETURN p\nORDER BY TYPE(r)"
    },
    {
      "name": "List all computer ReadGMSAPassword privileges",
      "description": "List all computer ReadGMSAPassword privileges - General",
      "query": "MATCH p=(n:Computer)-[r:ReadGMSAPassword]->(m:User)\nRETURN p\nORDER by n.name"
    },
    {
      "name": "List all computer ReadLAPSPassword privileges",
      "description": "List all computer ReadLAPSPassword privileges - General",
      "query": "MATCH p=(n:Computer)-[r:ReadLAPSPassword]->(m:Computer)\nRETURN p\nORDER by n.name"
    },
    {
      "name": "List all computer shortest paths to admin groups",
      "description": "List all computer shortest paths to admin groups - General",
      "query": "MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)admin|adm).*\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all computer shortest paths to Domain Admins",
      "description": "List all computer shortest paths to Domain Admins - General",
      "query": "MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-512\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all computer shortest paths to Domain Controllers",
      "description": "List all computer shortest paths to Domain Controllers - General",
      "query": "MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-516\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all computer shortest paths to domains",
      "description": "List all computer shortest paths to domains - General",
      "query": "MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Domain))\nWHERE NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all computer shortest paths to Enterprise Admins",
      "description": "List all computer shortest paths to Enterprise Admins - General",
      "query": "MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-519\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all computer shortest paths to Exchange groups",
      "description": "List all computer shortest paths to Exchange groups - General",
      "query": "MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)EXCHANGE).*\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all computer shortest paths to high-value targets",
      "description": "List all computer shortest paths to high-value targets - General",
      "query": "MATCH (m:Computer),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))\nWHERE NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all computer shortest paths to service groups",
      "description": "List all computer shortest paths to service groups - General",
      "query": "MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)service|svc).*\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all computer shortest paths to SQL groups",
      "description": "List all computer shortest paths to SQL groups - General",
      "query": "MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)SQL).*\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all computer shortest paths to web groups",
      "description": "List all computer shortest paths to web groups - General",
      "query": "MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)WEB).*\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all computer SQLAdmin privileges",
      "description": "List all computer SQLAdmin privileges - General",
      "query": "MATCH p=(n:Computer)-[r:SQLAdmin]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer SyncLAPSPassword privileges",
      "description": "List all computer SyncLAPSPassword privileges - General",
      "query": "MATCH p=(n:Computer)-[r:SyncLAPSPassword]->(m:Computer)\nRETURN p\nORDER by n.name"
    },
    {
      "name": "List all computer WriteAccountRestrictions privileges",
      "description": "List all computer WriteAccountRestrictions privileges - General",
      "query": "MATCH p=(n:Computer)-[r:WriteAccountRestrictions]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer WriteDacl privileges",
      "description": "List all computer WriteDacl privileges - General",
      "query": "MATCH p=(n:Computer)-[r:WriteDacl]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer WriteOwner privileges",
      "description": "List all computer WriteOwner privileges - General",
      "query": "MATCH p=(n:Computer)-[r:WriteOwner]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computer WriteSPN privileges",
      "description": "List all computer WriteSPN privileges - General",
      "query": "MATCH p=(n:Computer)-[r:WriteSPN]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all computers",
      "description": "List all computers - General",
      "query": "MATCH (n:Computer)\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all computers with an admin count",
      "description": "List all computers with an admin count - General",
      "query": "MATCH (m:Computer {admincount: true})\nRETURN m AS result\nORDER BY m.name"
    },
    {
      "name": "List all Containers",
      "description": "List all Containers - General",
      "query": "MATCH (c:Container)\nRETURN c AS result\nORDER BY c.name"
    },
    {
      "name": "List all DCSync privileges",
      "description": "List all DCSync privileges - General",
      "query": "MATCH p=(n)-[r:DCSync|AllExtendedRights|GenericAll]->(m:Domain)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all DCSync privileges for owned principals",
      "description": "List all DCSync privileges for owned principals - General",
      "query": "MATCH p=(m {owned: true})-[r:DCSync|AllExtendedRights|GenericAll]->(n:Domain)\nRETURN p\nORDER by m.name"
    },
    {
      "name": "List all DCSync privileges for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all DCSync privileges for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:DCSync|AllExtendedRights|GenericAll]->(m:Domain)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all disabled computers",
      "description": "List all disabled computers - General",
      "query": "MATCH (n:Computer {enabled: false})\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all Domain Admins",
      "description": "List all Domain Admins - General",
      "query": "MATCH (n:Group)\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-512\"\nWITH n\nMATCH p=(n)<-[r:MemberOf*1..]-(m)\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all Domain Controllers",
      "description": "List all Domain Controllers - General",
      "query": "MATCH (n:Group)\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-516\"\nWITH n\nMATCH p=(n)<-[r:MemberOf*1..]-(m)\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all Domain Controllers OSs",
      "description": "List all Domain Controllers OSs - General",
      "query": "MATCH (n:Group)\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-516\"\nWITH n\nMATCH p=(n)<-[r:MemberOf*1..]-(m)\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all domain cross-domain DCSync privileges",
      "description": "List all domain cross-domain DCSync privileges - General",
      "query": "MATCH p=(n:Domain)-[r:DCSync|AllExtendedRights|GenericAll]->(m:Domain)\nWHERE n.name <> m.name\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all domain shortest paths to domains",
      "description": "List all domain shortest paths to domains - General",
      "query": "MATCH p=shortestPath((m:Domain)-[r*1..]->(n:Domain))\nWHERE NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NONE (r in relationships(p)\nWHERE type(r)=\"TrustedBy\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all domain trusts",
      "description": "List all domain trusts - General",
      "query": "MATCH p=(n:Domain)-[r:TrustedBy]->(m:Domain)\nRETURN p\nORDER by n.name"
    },
    {
      "name": "List all domains",
      "description": "List all domains - General",
      "query": "MATCH (n:Domain)\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all Domains functional level",
      "description": "List all Domains functional level - General",
      "query": "MATCH (d:Domain)\nRETURN d AS result\nORDER BY d.name"
    },
    {
      "name": "List all DumpSMSAPassword privileges for owned principals",
      "description": "List all DumpSMSAPassword privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:DumpSMSAPassword]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all DumpSMSAPassword privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all DumpSMSAPassword privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:DumpSMSAPassword]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all emails",
      "description": "List all emails - General",
      "query": "MATCH (u:User)\nRETURN u AS result\nORDER BY u.name"
    },
    {
      "name": "List all enabled computers",
      "description": "List all enabled computers - General",
      "query": "MATCH (n:Computer {enabled: true})\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all Enterprise Admins",
      "description": "List all Enterprise Admins - General",
      "query": "MATCH (n:Group)\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-519\"\nWITH n\nMATCH p=(n)<-[r:MemberOf*1..]-(m)\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all ExecuteDCOM privileges for owned principals",
      "description": "List all ExecuteDCOM privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:ExecuteDCOM]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all ExecuteDCOM privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all ExecuteDCOM privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:ExecuteDCOM]->(m:Computer)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all ForceChangePassword privileges for owned principals",
      "description": "List all ForceChangePassword privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:ForceChangePassword]->(m:User)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all ForceChangePassword privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all ForceChangePassword privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:ForceChangePassword]->(m:User)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all GenericAll privileges for owned principals",
      "description": "List all GenericAll privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:GenericAll]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all GenericAll privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all GenericAll privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:GenericAll]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all GenericWrite privileges for owned principals",
      "description": "List all GenericWrite privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:GenericWrite]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all GenericWrite privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all GenericWrite privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:GenericWrite]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all GP Links",
      "description": "List all GP Links - General",
      "query": "MATCH p=(g1)-[:GPLink]->(g2)\nRETURN p\nORDER BY g1.name"
    },
    {
      "name": "List all GPOs",
      "description": "List all GPOs - General",
      "query": "MATCH (n:GPO)\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all group AddKeyCredentialLink privileges",
      "description": "List all group AddKeyCredentialLink privileges - General",
      "query": "MATCH p=(n:Group)-[r:AddKeyCredentialLink]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group AddMember privileges",
      "description": "List all group AddMember privileges - General",
      "query": "MATCH p=(n:Group)-[r:AddMember]->(m:Group)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group AddSelf privileges",
      "description": "List all group AddSelf privileges - General",
      "query": "MATCH p=(n:Group)-[r:AddSelf]->(m:Group)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group AdminTo privileges",
      "description": "List all group AdminTo privileges - General",
      "query": "MATCH p=(m:Group)-[r:AdminTo]->(n:Computer)\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all group AllExtendedRights privileges",
      "description": "List all group AllExtendedRights privileges - General",
      "query": "MATCH p=(n:Group)-[r:AllExtendedRights]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group AllowedToAct privileges",
      "description": "List all group AllowedToAct privileges - General",
      "query": "MATCH p=(n:Group)-[r:AllowedToAct]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group CanPSRemote privileges",
      "description": "List all group CanPSRemote privileges - General",
      "query": "MATCH p=(n:Group)-[r:CanPSRemote]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group Constrained Delegation",
      "description": "List all group Constrained Delegation - General",
      "query": "MATCH p=(g:Group)-[:AllowedToDelegate]->(c:Computer)\nRETURN p\nORDER BY g.name"
    },
    {
      "name": "List all group cross-domain DCSync privileges",
      "description": "List all group cross-domain DCSync privileges - General",
      "query": "MATCH p=(n:Group)-[r:DCSync|AllExtendedRights|GenericAll]->(m:Domain)\nWHERE n.domain <> m.name\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group DCSync privileges",
      "description": "List all group DCSync privileges - General",
      "query": "MATCH p=(n:Group)-[r:DCSync|AllExtendedRights|GenericAll]->(m:Domain)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group descriptions",
      "description": "List all group descriptions - General",
      "query": "MATCH (g:Group)\nRETURN g AS result\nORDER BY g.name"
    },
    {
      "name": "List all group DumpSMSAPassword privileges",
      "description": "List all group DumpSMSAPassword privileges - General",
      "query": "MATCH p=(n:Group)-[r:DumpSMSAPassword]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group ExecuteDCOM privileges",
      "description": "List all group ExecuteDCOM privileges - General",
      "query": "MATCH p=(n:Group)-[r:ExecuteDCOM]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group ForceChangePassword privileges",
      "description": "List all group ForceChangePassword privileges - General",
      "query": "MATCH p=(n:Group)-[r:ForceChangePassword]->(m:User)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group GenericAll privileges",
      "description": "List all group GenericAll privileges - General",
      "query": "MATCH p=(n:Group)-[r:GenericAll]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group GenericWrite privileges",
      "description": "List all group GenericWrite privileges - General",
      "query": "MATCH p=(n:Group)-[r:GenericWrite]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group HasSIDHistory privileges",
      "description": "List all group HasSIDHistory privileges - General",
      "query": "MATCH p=(n:Group)-[r:HasSIDHistory]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group memberships",
      "description": "List all group memberships - General",
      "query": "MATCH p=(n:Group)-[r:MemberOf]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group Owns privileges",
      "description": "List all group Owns privileges - General",
      "query": "MATCH p=(n:Group)-[r:Owns]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group privileges",
      "description": "List all group privileges - General",
      "query": "MATCH p=(n:Group)-[r]->(m)\nRETURN p\nORDER BY TYPE(r)"
    },
    {
      "name": "List all group RDP privileges",
      "description": "List all group RDP privileges - General",
      "query": "MATCH p=(g:Group)-[:CanRDP]->(c:Computer)\nRETURN p\nORDER BY g.name"
    },
    {
      "name": "List all group ReadGMSAPassword privileges",
      "description": "List all group ReadGMSAPassword privileges - General",
      "query": "MATCH p=(n:Group)-[r:ReadGMSAPassword]->(m:User)\nRETURN p\nORDER by n.name"
    },
    {
      "name": "List all group ReadLAPSPassword privileges",
      "description": "List all group ReadLAPSPassword privileges - General",
      "query": "MATCH p=(n:Group)-[r:ReadLAPSPassword]->(m:Computer)\nRETURN p\nORDER by n.name"
    },
    {
      "name": "List all group shortest paths to admin groups",
      "description": "List all group shortest paths to admin groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)admin|adm).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all group shortest paths to Domain Admins",
      "description": "List all group shortest paths to Domain Admins - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-512\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all group shortest paths to Domain Controllers",
      "description": "List all group shortest paths to Domain Controllers - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-516\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all group shortest paths to domains",
      "description": "List all group shortest paths to domains - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Domain))\nWHERE NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all group shortest paths to Enterprise Admins",
      "description": "List all group shortest paths to Enterprise Admins - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-519\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all group shortest paths to Exchange groups",
      "description": "List all group shortest paths to Exchange groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)EXCHANGE).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all group shortest paths to high-value targets",
      "description": "List all group shortest paths to high-value targets - General",
      "query": "MATCH (m:Group),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))\nWHERE NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all group shortest paths to service groups",
      "description": "List all group shortest paths to service groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)service|svc).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all group shortest paths to SQL groups",
      "description": "List all group shortest paths to SQL groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)SQL).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all group shortest paths to web groups",
      "description": "List all group shortest paths to web groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)WEB).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all group SQLAdmin privileges",
      "description": "List all group SQLAdmin privileges - General",
      "query": "MATCH p=(n:Group)-[r:SQLAdmin]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group SyncLAPSPassword privileges",
      "description": "List all group SyncLAPSPassword privileges - General",
      "query": "MATCH p=(n:Group)-[r:SyncLAPSPassword]->(m:Computer)\nRETURN p\nORDER by n.name"
    },
    {
      "name": "List all group WriteAccountRestrictions privileges",
      "description": "List all group WriteAccountRestrictions privileges - General",
      "query": "MATCH p=(n:Group)-[r:WriteAccountRestrictions]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group WriteDacl privileges",
      "description": "List all group WriteDacl privileges - General",
      "query": "MATCH p=(n:Group)-[r:WriteDacl]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group WriteOwner privileges",
      "description": "List all group WriteOwner privileges - General",
      "query": "MATCH p=(n:Group)-[r:WriteOwner]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group WriteSPN privileges",
      "description": "List all group WriteSPN privileges - General",
      "query": "MATCH p=(n:Group)-[r:WriteSPN]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group-delegated AdminTo privileges for owned principals",
      "description": "List all group-delegated AdminTo privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[:MemberOf]->(g:Group)-[:AdminTo]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group-delegated AdminTo privileges for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all group-delegated AdminTo privileges for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=(m:Group)-[:MemberOf]->(g:Group)-[:AdminTo]->(n:Computer)\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all group-delegated privileges for owned principals",
      "description": "List all group-delegated privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[:MemberOf]->(g:Group),(g)-[r]->(m)\nRETURN p\nORDER BY TYPE(r)"
    },
    {
      "name": "List all group-delegated privileges for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all group-delegated privileges for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=(n:Group)-[:MemberOf]->(g:Group)-[r]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY TYPE(r)"
    },
    {
      "name": "List all group-delegated RDP privileges for owned principals",
      "description": "List all group-delegated RDP privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[:MemberOf]->(g:Group)-[:CanRDP]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all group-delegated RDP privileges for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all group-delegated RDP privileges for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=(m:Group)-[:MemberOf]->(g:Group)-[:CanRDP]->(n:Computer)\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all groups",
      "description": "List all groups - General",
      "query": "MATCH (n:Group)\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all groups with an admin count",
      "description": "List all groups with an admin count - General",
      "query": "MATCH (m:Group {admincount: true})\nRETURN m AS result\nORDER BY m.name"
    },
    {
      "name": "List all HasSIDHistory privileges for owned principals",
      "description": "List all HasSIDHistory privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:HasSIDHistory]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all HasSIDHistory privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all HasSIDHistory privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:HasSIDHistory]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all high-value computers",
      "description": "List all high-value computers - General",
      "query": "MATCH (m:Computer {highvalue: true})\nRETURN m AS result\nORDER BY m.name"
    },
    {
      "name": "List all high-value groups",
      "description": "List all high-value groups - General",
      "query": "MATCH (m:Group {highvalue: true})\nRETURN m AS result\nORDER BY m.name"
    },
    {
      "name": "List all high-value owned principals",
      "description": "List all high-value owned principals - General",
      "query": "MATCH (m {highvalue: true, owned: true})\nRETURN m AS result\nORDER BY m.name"
    },
    {
      "name": "List all high-value principals",
      "description": "List all high-value principals - General",
      "query": "MATCH p=(n {highvalue: true})\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all high-value users",
      "description": "List all high-value users - General",
      "query": "MATCH (m:User {highvalue: true})\nRETURN m AS result\nORDER BY m.name"
    },
    {
      "name": "List all high-value users",
      "description": "List all high-value users - General",
      "query": "MATCH (m:User {highvalue: true})\nRETURN m AS result\nORDER BY m.name"
    },
    {
      "name": "List all kerberoastable users",
      "description": "List all kerberoastable users - General",
      "query": "MATCH (n:User {hasspn: true})\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all kerberoastable users for owned principals",
      "description": "List all kerberoastable users for owned principals - General",
      "query": "MATCH (n:User {owned: true, hasspn: true})\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all members of high-value groups",
      "description": "List all members of high-value groups - General",
      "query": "MATCH p=(n:User)-[r:MemberOf*1..]->(m:Group {highvalue: true})\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all members of high-value groups for owned principals",
      "description": "List all members of high-value groups for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:MemberOf*1..]->(m:Group {highvalue: true})\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all memberships for owned principals",
      "description": "List all memberships for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:MemberOf]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all memberships for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all memberships for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:MemberOf]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all object control over Containers",
      "description": "List all object control over Containers - General",
      "query": "MATCH p=(n)-[r:Owns|AllExtendedRights|WriteDacl|GenericAll|WriteOwner|GenericWrite]->(c:Container)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all object control over Containers for owned principals",
      "description": "List all object control over Containers for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:Owns|AllExtendedRights|WriteDacl|GenericAll|WriteOwner|GenericWrite]->(c:Container)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all object control over GPOs",
      "description": "List all object control over GPOs - General",
      "query": "MATCH p=(n)-[r:Owns|AllExtendedRights|WriteDacl|GenericAll|WriteOwner|GenericWrite]->(g:GPO)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all object control over GPOs for owned principals",
      "description": "List all object control over GPOs for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:Owns|AllExtendedRights|WriteDacl|GenericAll|WriteOwner|GenericWrite]->(g:GPO)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all object control over OUs",
      "description": "List all object control over OUs - General",
      "query": "MATCH p=(n)-[r:Owns|AllExtendedRights|WriteDacl|GenericAll|WriteOwner|GenericWrite]->(o:OU)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all object control over OUs for owned principals",
      "description": "List all object control over OUs for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:Owns|AllExtendedRights|WriteDacl|GenericAll|WriteOwner|GenericWrite]->(o:OU)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all OUs",
      "description": "List all OUs - General",
      "query": "MATCH (o:OU)\nRETURN o AS result\nORDER BY o.name"
    },
    {
      "name": "List all owned principals",
      "description": "List all owned principals - General",
      "query": "MATCH (m {owned: true})\nRETURN m AS result\nORDER BY m.name"
    },
    {
      "name": "List all owned principals with an admin count",
      "description": "List all owned principals with an admin count - General",
      "query": "MATCH (m {admincount: true, owned: true})\nRETURN m AS result\nORDER BY m.name"
    },
    {
      "name": "List all Owns privileges for owned principals",
      "description": "List all Owns privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:Owns]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all Owns privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all Owns privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:Owns]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all privileges for owned principals",
      "description": "List all privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r]->(m)\nRETURN p\nORDER BY TYPE(r)"
    },
    {
      "name": "List all privileges for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all privileges for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY TYPE(r)"
    },
    {
      "name": "List all RDP privileges for owned principals",
      "description": "List all RDP privileges for owned principals - General",
      "query": "MATCH p=(m {owned: true})-[:CanRDP]->(c:Computer)\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all RDP privileges for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all RDP privileges for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=(g:Group)-[:CanRDP]->(c:Computer)\nWHERE (g.objectid =~ \"(?i)S-1-5-21-.*-513\" OR g.objectid =~ \"(?i).*-S-1-5-11\" OR g.objectid =~ \"(?i).*-S-1-1-0\" OR g.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY g.name"
    },
    {
      "name": "List all ReadGMSAPassword privileges for owned principals",
      "description": "List all ReadGMSAPassword privileges for owned principals - General",
      "query": "MATCH p=(m {owned: true})-[r:ReadGMSAPassword]->(n:User)\nRETURN p\nORDER by m.name"
    },
    {
      "name": "List all ReadGMSAPassword privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all ReadGMSAPassword privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:ReadGMSAPassword]->(m:User)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all ReadLAPSPassword privileges for owned principals",
      "description": "List all ReadLAPSPassword privileges for owned principals - General",
      "query": "MATCH p=(m {owned: true})-[r:ReadLAPSPassword]->(n:Computer)\nRETURN p\nORDER by m.name"
    },
    {
      "name": "List all ReadLAPSPassword privileges for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all ReadLAPSPassword privileges for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:ReadLAPSPassword]->(m:Computer)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER by n.name"
    },
    {
      "name": "List all sensitive users",
      "description": "List all sensitive users - General",
      "query": "MATCH (m:User {sensitive: true})\nRETURN m AS result\nORDER BY m.name"
    },
    {
      "name": "List all sessions",
      "description": "List all sessions - General",
      "query": "MATCH p=(m:Computer)-[r:HasSession]->(n:User)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all sessions for owned principals",
      "description": "List all sessions for owned principals - General",
      "query": "MATCH p=(m:Computer)-[r:HasSession]->(n:User {owned: true})\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all shortest paths to admin groups for owned principals",
      "description": "List all shortest paths to admin groups for owned principals - General",
      "query": "MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)admin|adm).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to admin groups for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all shortest paths to admin groups for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\") AND n.name =~ \".*((?i)admin|adm).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to Domain Admins for owned principals",
      "description": "List all shortest paths to Domain Admins for owned principals - General",
      "query": "MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-512\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to Domain Admins for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all shortest paths to Domain Admins for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\") AND n.objectid =~ \"(?i)S-1-5-21-.*-512\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to Domain Controllers for owned principals",
      "description": "List all shortest paths to Domain Controllers for owned principals - General",
      "query": "MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-516\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to Domain Controllers for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all shortest paths to Domain Controllers for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\") AND n.objectid =~ \"(?i)S-1-5-21-.*-516\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to domains for owned principals",
      "description": "List all shortest paths to domains for owned principals - General",
      "query": "MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Domain))\nWHERE NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to domains for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all shortest paths to domains for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Domain))\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to Enterprise Admins for owned principals",
      "description": "List all shortest paths to Enterprise Admins for owned principals - General",
      "query": "MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-519\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to Enterprise Admins for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all shortest paths to Enterprise Admins for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\") AND n.objectid =~ \"(?i)S-1-5-21-.*-519\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to Exchange groups for owned principals",
      "description": "List all shortest paths to Exchange groups for owned principals - General",
      "query": "MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)EXCHANGE).*\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to Exchange groups for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all shortest paths to Exchange groups for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\") AND n.name =~ \".*((?i)EXCHANGE).*\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to high-value targets for owned principals",
      "description": "List all shortest paths to high-value targets for owned principals - General",
      "query": "MATCH (m {owned: true}),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))\nWHERE NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to high-value targets for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all shortest paths to high-value targets for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH (m:Group),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to service groups for owned principals",
      "description": "List all shortest paths to service groups for owned principals - General",
      "query": "MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)service|svc).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to service groups for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all shortest paths to service groups for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\") AND n.name =~ \".*((?i)service|svc).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to SQL groups for owned principals",
      "description": "List all shortest paths to SQL groups for owned principals - General",
      "query": "MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)SQL).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to SQL groups for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all shortest paths to SQL groups for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\") AND n.name =~ \".*((?i)SQL).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to web groups for owned principals",
      "description": "List all shortest paths to web groups for owned principals - General",
      "query": "MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)WEB).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all shortest paths to web groups for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all shortest paths to web groups for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))\nWHERE (m.objectid =~ \"(?i)S-1-5-21-.*-513\" OR m.objectid =~ \"(?i).*-S-1-5-11\" OR m.objectid =~ \"(?i).*-S-1-1-0\" OR m.objectid =~ \"(?i).*-S-1-5-32-545\") AND n.name =~ \".*((?i)WEB).*\" AND NOT m=n AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all SQLAdmin privileges for owned principals",
      "description": "List all SQLAdmin privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:SQLAdmin]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all SQLAdmin privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all SQLAdmin privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:SQLAdmin]->(m:Computer)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all SyncLAPSPassword privileges for owned principals",
      "description": "List all SyncLAPSPassword privileges for owned principals - General",
      "query": "MATCH p=(m {owned: true})-[r:SyncLAPSPassword]->(n:Computer)\nRETURN p\nORDER by m.name"
    },
    {
      "name": "List all SyncLAPSPassword privileges for Users, Domain Users, Authenticated Users, or Everyone groups",
      "description": "List all SyncLAPSPassword privileges for Users, Domain Users, Authenticated Users, or Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:SyncLAPSPassword]->(m:Computer)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER by n.name"
    },
    {
      "name": "List all Unconstrained Delegation",
      "description": "List all Unconstrained Delegation - General",
      "query": "MATCH (c:Computer {unconstraineddelegation: true})\nRETURN c AS result\nORDER BY c.name"
    },
    {
      "name": "List all unsupported OSs",
      "description": "List all unsupported OSs - General",
      "query": "MATCH (H:Computer)\nWHERE H.operatingsystem =~ '.*(2000|2003|2008|xp|vista|7|me).*'\nRETURN H AS result\nORDER BY H.name"
    },
    {
      "name": "List all user AddKeyCredentialLink privileges",
      "description": "List all user AddKeyCredentialLink privileges - General",
      "query": "MATCH p=(n:User)-[r:AddKeyCredentialLink]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user AddMember privileges",
      "description": "List all user AddMember privileges - General",
      "query": "MATCH p=(n:User)-[r:AddMember]->(m:Group)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user AddSelf privileges",
      "description": "List all user AddSelf privileges - General",
      "query": "MATCH p=(n:User)-[r:AddSelf]->(m:Group)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user AdminTo privileges",
      "description": "List all user AdminTo privileges - General",
      "query": "MATCH p=(m:User)-[r:AdminTo]->(n:Computer)\nRETURN p\nORDER BY m.name"
    },
    {
      "name": "List all user AllExtendedRights privileges",
      "description": "List all user AllExtendedRights privileges - General",
      "query": "MATCH p=(n:User)-[r:AllExtendedRights]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user AllowedToAct privileges",
      "description": "List all user AllowedToAct privileges - General",
      "query": "MATCH p=(n:User)-[r:AllowedToAct]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user CanPSRemote privileges",
      "description": "List all user CanPSRemote privileges - General",
      "query": "MATCH p=(n:User)-[r:CanPSRemote]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user Constrained Delegation",
      "description": "List all user Constrained Delegation - General",
      "query": "MATCH p=(u:User)-[:AllowedToDelegate]->(c:Computer)\nRETURN p\nORDER BY u.name"
    },
    {
      "name": "List all user cross-domain DCSync privileges",
      "description": "List all user cross-domain DCSync privileges - General",
      "query": "MATCH p=(n:User)-[r:DCSync|AllExtendedRights|GenericAll]->(m:Domain)\nWHERE n.domain <> m.name\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user DCSync privileges",
      "description": "List all user DCSync privileges - General",
      "query": "MATCH p=(n:User)-[r:DCSync|AllExtendedRights|GenericAll]->(m:Domain)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user descriptions",
      "description": "List all user descriptions - General",
      "query": "MATCH (u:User)\nRETURN u AS result\nORDER BY u.name"
    },
    {
      "name": "List all user DumpSMSAPassword privileges",
      "description": "List all user DumpSMSAPassword privileges - General",
      "query": "MATCH p=(n:User)-[r:DumpSMSAPassword]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user ExecuteDCOM privileges",
      "description": "List all user ExecuteDCOM privileges - General",
      "query": "MATCH p=(n:User)-[r:ExecuteDCOM]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user ForceChangePassword privileges",
      "description": "List all user ForceChangePassword privileges - General",
      "query": "MATCH p=(n:User)-[r:ForceChangePassword]->(m:User)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user GenericAll privileges",
      "description": "List all user GenericAll privileges - General",
      "query": "MATCH p=(n:User)-[r:GenericAll]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user GenericWrite privileges",
      "description": "List all user GenericWrite privileges - General",
      "query": "MATCH p=(n:User)-[r:GenericWrite]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user HasSIDHistory privileges",
      "description": "List all user HasSIDHistory privileges - General",
      "query": "MATCH p=(n:User)-[r:HasSIDHistory]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user memberships",
      "description": "List all user memberships - General",
      "query": "MATCH p=(n:User)-[r:MemberOf]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user Owns privileges",
      "description": "List all user Owns privileges - General",
      "query": "MATCH p=(n:User)-[r:Owns]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user privileges",
      "description": "List all user privileges - General",
      "query": "MATCH p=(n:User)-[r]->(m)\nRETURN p\nORDER BY TYPE(r)"
    },
    {
      "name": "List all user RDP privileges",
      "description": "List all user RDP privileges - General",
      "query": "MATCH p=(u:User)-[:CanRDP]->(c:Computer)\nRETURN p\nORDER BY u.name"
    },
    {
      "name": "List all user ReadGMSAPassword privileges",
      "description": "List all user ReadGMSAPassword privileges - General",
      "query": "MATCH p=(n:User)-[r:ReadGMSAPassword]->(m:User)\nRETURN p\nORDER by n.name"
    },
    {
      "name": "List all user ReadLAPSPassword privileges",
      "description": "List all user ReadLAPSPassword privileges - General",
      "query": "MATCH p=(n:User)-[r:ReadLAPSPassword]->(m:Computer)\nRETURN p\nORDER by n.name"
    },
    {
      "name": "List all user shortest paths to admin groups",
      "description": "List all user shortest paths to admin groups - General",
      "query": "MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)admin|adm).*\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all user shortest paths to Domain Admins",
      "description": "List all user shortest paths to Domain Admins - General",
      "query": "MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-512\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all user shortest paths to Domain Controllers",
      "description": "List all user shortest paths to Domain Controllers - General",
      "query": "MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-516\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all user shortest paths to domains",
      "description": "List all user shortest paths to domains - General",
      "query": "MATCH p=shortestPath((m:User)-[r*1..]->(n:Domain))\nWHERE NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all user shortest paths to Enterprise Admins",
      "description": "List all user shortest paths to Enterprise Admins - General",
      "query": "MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))\nWHERE n.objectid =~ \"(?i)S-1-5-21-.*-519\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all user shortest paths to Exchange groups",
      "description": "List all user shortest paths to Exchange groups - General",
      "query": "MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)EXCHANGE).*\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all user shortest paths to high-value targets",
      "description": "List all user shortest paths to high-value targets - General",
      "query": "MATCH (m:User),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))\nWHERE NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\") AND NOT m=n\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all user shortest paths to service groups",
      "description": "List all user shortest paths to service groups - General",
      "query": "MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)service|svc).*\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all user shortest paths to SQL groups",
      "description": "List all user shortest paths to SQL groups - General",
      "query": "MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)SQL).*\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all user shortest paths to web groups",
      "description": "List all user shortest paths to web groups - General",
      "query": "MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))\nWHERE n.name =~ \".*((?i)WEB).*\" AND NONE(x IN relationships(p)\nWHERE type(x)=\"Contains\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"CrossForestTrust\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"DelegatedEnrollmentAgent\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"Enroll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnrollOnBehalfOf\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"EnterpriseCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ExtendedByPolicy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChanges\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesAll\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GetChangesInFilteredSet\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"GPLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"HostsCAService\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"IssuedSignedBy\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"LocalToComputer\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCA\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"ManageCertificates\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"MemberOfLocalGroup\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"NTAuthStoreFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OIDGroupLink\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"OwnsRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"PublishedTo\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RemoteInteractiveLogonPrivilege\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"RootCAFor\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"TrustedForNTAuth\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WriteOwnerRaw\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKIEnrollmentFlag\") AND NONE(x IN relationships(p)\nWHERE type(x)=\"WritePKINameFlag\")\nRETURN m.name AS m_name, p\nORDER BY m.name"
    },
    {
      "name": "List all user SQLAdmin privileges",
      "description": "List all user SQLAdmin privileges - General",
      "query": "MATCH p=(n:User)-[r:SQLAdmin]->(m:Computer)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user SyncLAPSPassword privileges",
      "description": "List all user SyncLAPSPassword privileges - General",
      "query": "MATCH p=(n:User)-[r:SyncLAPSPassword]->(m:Computer)\nRETURN p\nORDER by n.name"
    },
    {
      "name": "List all user WriteAccountRestrictions privileges",
      "description": "List all user WriteAccountRestrictions privileges - General",
      "query": "MATCH p=(n:User)-[r:WriteAccountRestrictions]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user WriteDacl privileges",
      "description": "List all user WriteDacl privileges - General",
      "query": "MATCH p=(n:User)-[r:WriteDacl]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user WriteOwner privileges",
      "description": "List all user WriteOwner privileges - General",
      "query": "MATCH p=(n:User)-[r:WriteOwner]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all user WriteSPN privileges",
      "description": "List all user WriteSPN privileges - General",
      "query": "MATCH p=(n:User)-[r:WriteSPN]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all users",
      "description": "List all users - General",
      "query": "MATCH (n:User)\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all users that don't require a password",
      "description": "List all users that don't require a password - General",
      "query": "MATCH (n:User {passwordnotreqd: true})\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all users that don't require a password for owned principals",
      "description": "List all users that don't require a password for owned principals - General",
      "query": "MATCH (n:User {passwordnotreqd: true, owned: true})\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all users where password never expires",
      "description": "List all users where password never expires - General",
      "query": "MATCH (n:User {pwdneverexpires: true})\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all users where password never expires for owned principals",
      "description": "List all users where password never expires for owned principals - General",
      "query": "MATCH (n:User {pwdneverexpires: true, owned: true})\nRETURN n AS result\nORDER BY n.name"
    },
    {
      "name": "List all users with an admin count",
      "description": "List all users with an admin count - General",
      "query": "MATCH (m:User {admincount: true})\nRETURN m AS result\nORDER BY m.name"
    },
    {
      "name": "List all WriteAccountRestrictions privileges for owned principals",
      "description": "List all WriteAccountRestrictions privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:WriteAccountRestrictions]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all WriteAccountRestrictions privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all WriteAccountRestrictions privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:WriteAccountRestrictions]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all WriteDacl privileges for owned principals",
      "description": "List all WriteDacl privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:WriteDacl]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all WriteDacl privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all WriteDacl privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:WriteDacl]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all WriteOwner privileges for owned principals",
      "description": "List all WriteOwner privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:WriteOwner]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all WriteOwner privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all WriteOwner privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:WriteOwner]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all WriteSPN privileges for owned principals",
      "description": "List all WriteSPN privileges for owned principals - General",
      "query": "MATCH p=(n {owned: true})-[r:WriteSPN]->(m)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List all WriteSPN privileges for Users, Domain Users, Authenticated Users, and Everyone groups",
      "description": "List all WriteSPN privileges for Users, Domain Users, Authenticated Users, and Everyone groups - General",
      "query": "MATCH p=(n:Group)-[r:WriteSPN]->(m)\nWHERE (n.objectid =~ \"(?i)S-1-5-21-.*-513\" OR n.objectid =~ \"(?i).*-S-1-5-11\" OR n.objectid =~ \"(?i).*-S-1-1-0\" OR n.objectid =~ \"(?i).*-S-1-5-32-545\")\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List computers containing \"dev\"",
      "description": "List computers containing \"dev\" - General",
      "query": "MATCH (c:Computer)\nWHERE c.name =~ '.*((?i)dev).*'\nRETURN c AS result\nORDER BY c.name"
    },
    {
      "name": "List computers containing \"prod\"",
      "description": "List computers containing \"prod\" - General",
      "query": "MATCH (c:Computer)\nWHERE c.name =~ '.*((?i)prod).*'\nRETURN c AS result\nORDER BY c.name"
    },
    {
      "name": "List computers containing \"sql\"",
      "description": "List computers containing \"sql\" - General",
      "query": "MATCH (c:Computer)\nWHERE c.name =~ '.*((?i)sql).*'\nRETURN c AS result\nORDER BY c.name"
    },
    {
      "name": "List computers containing \"web\"",
      "description": "List computers containing \"web\" - General",
      "query": "MATCH (c:Computer)\nWHERE c.name =~ '.*((?i)web).*'\nRETURN c AS result\nORDER BY c.name"
    },
    {
      "name": "List computers with LAPS disabled",
      "description": "List computers with LAPS disabled - General",
      "query": "MATCH (c:Computer)\nWHERE c.haslaps = false\nRETURN c AS result\nORDER BY c.name"
    },
    {
      "name": "List computers with LAPS enabled",
      "description": "List computers with LAPS enabled - General",
      "query": "MATCH (c:Computer)\nWHERE c.haslaps = true\nRETURN c AS result\nORDER BY c.name"
    },
    {
      "name": "List Domain Admin sessions",
      "description": "List Domain Admin sessions - General",
      "query": "MATCH (n:User)-[:MemberOf*1..]->(g:Group)\nWHERE g.objectid ENDS\nWITH '-512'\nMATCH p = (c:Computer)-[:HasSession]->(n)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List Enterprise Admin sessions",
      "description": "List Enterprise Admin sessions - General",
      "query": "MATCH (n:User)-[:MemberOf*1..]->(g:Group)\nWHERE g.objectid ENDS\nWITH '-519'\nMATCH p = (c:Computer)-[:HasSession]->(n)\nRETURN p\nORDER BY n.name"
    },
    {
      "name": "List groups containing \"admin\"",
      "description": "List groups containing \"admin\" - General",
      "query": "MATCH (g:Group)\nWHERE g.name =~ '.*((?i)admin|adm).*'\nRETURN g AS result\nORDER BY g.name"
    },
    {
      "name": "List groups containing \"dev\"",
      "description": "List groups containing \"dev\" - General",
      "query": "MATCH (g:Group)\nWHERE g.name =~ '.*((?i)dev).*'\nRETURN g AS result\nORDER BY g.name"
    },
    {
      "name": "List groups containing \"prod\"",
      "description": "List groups containing \"prod\" - General",
      "query": "MATCH (g:Group)\nWHERE g.name =~ '.*((?i)prod).*'\nRETURN g AS result\nORDER BY g.name"
    },
    {
      "name": "List groups containing \"sql\"",
      "description": "List groups containing \"sql\" - General",
      "query": "MATCH (g:Group)\nWHERE g.name =~ '.*((?i)sql).*'\nRETURN g AS result\nORDER BY g.name"
    },
    {
      "name": "List groups containing \"svc/service\"",
      "description": "List groups containing \"svc/service\" - General",
      "query": "MATCH (g:Group)\nWHERE g.name =~ '.*((?i)svc|service).*'\nRETURN g AS result\nORDER BY g.name"
    },
    {
      "name": "List groups containing \"web\"",
      "description": "List groups containing \"web\" - General",
      "query": "MATCH (g:Group)\nWHERE g.name =~ '.*((?i)web).*'\nRETURN g AS result\nORDER BY g.name"
    },
    {
      "name": "List potential passwords in descriptions",
      "description": "List potential passwords in descriptions - General",
      "query": "MATCH (u:User)\nWHERE u.description =~ '.*((?i)pass|pw|:).*'\nRETURN u AS result\nORDER BY u.name"
    },
    {
      "name": "List users containing \"admin\"",
      "description": "List users containing \"admin\" - General",
      "query": "MATCH (u:User)\nWHERE u.name =~ '.*((?i)admin|adm).*'\nRETURN u AS result\nORDER BY u.name"
    },
    {
      "name": "List users containing \"dev\"",
      "description": "List users containing \"dev\" - General",
      "query": "MATCH (u:User)\nWHERE u.name =~ '.*((?i)dev).*'\nRETURN u AS result\nORDER BY u.name"
    },
    {
      "name": "List users containing \"prod\"",
      "description": "List users containing \"prod\" - General",
      "query": "MATCH (u:User)\nWHERE u.name =~ '.*((?i)prod).*'\nRETURN u AS result\nORDER BY u.name"
    },
    {
      "name": "List users containing \"sql\"",
      "description": "List users containing \"sql\" - General",
      "query": "MATCH (u:User)\nWHERE u.name =~ '.*((?i)sql).*'\nRETURN u AS result\nORDER BY u.name"
    },
    {
      "name": "List users containing \"svc/service\"",
      "description": "List users containing \"svc/service\" - General",
      "query": "MATCH (u:User)\nWHERE u.name =~ '.*((?i)svc|service).*'\nRETURN u AS result\nORDER BY u.name"
    },
    {
      "name": "List users containing \"web\"",
      "description": "List users containing \"web\" - General",
      "query": "MATCH (u:User)\nWHERE u.name =~ '.*((?i)web).*'\nRETURN u AS result\nORDER BY u.name"
    }
  ]
}