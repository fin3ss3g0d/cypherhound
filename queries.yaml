queries:
- group: general
  desc: List all AddKeyCredentialLink privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:AddKeyCredentialLink]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has AddKeyCredentialLink over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all AddKeyCredentialLink privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:AddKeyCredentialLink]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has AddKeyCredentialLink over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1]
    }})
- group: general
  desc: List all AddMember privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:AddMember]->(m:Group)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has AddMember over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all AddMember privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:AddMember]->(m:Group)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has AddMember over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all AddSelf privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:AddSelf]->(m:Group)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has AddSelf over {{ m_name }} ({{ labels(m)[0]
    }}/{{ labels(m)[1] }})
- group: general
  desc: List all AddSelf privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:AddSelf]->(m:Group)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has AddSelf over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all AdminTo privileges for owned principals
  cypher: |-
    MATCH p=(m {owned: true})-[r:AdminTo]->(n:Computer)
    RETURN m.name AS m_name, n.name AS n_name, labels(m)
    ORDER BY m.name
  msg_template: |-
    {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }}) is AdminTo {{ n_name }}
- group: general
  desc: List all AdminTo privileges for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=(m:Group)-[r:AdminTo]->(n:Computer)
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN m.name AS m_name, n.name AS n_name
    ORDER BY m.name
  msg_template: |-
    Group {{ m_name }} is AdminTo {{ n_name }}
- group: general
  desc: List all AdminTo privileges to Domain Controllers
  cypher: |-
    MATCH (m)-[:AdminTo]->(n:Computer)-[:MemberOf]->(g:Group)
    WHERE g.objectid =~ "(?i)S-1-5-21-.*-516"
    RETURN m.name AS m_name, n.name AS n_name, labels(m)
    ORDER BY m.name
  msg_template: |-
    {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }}) is AdminTo {{ n_name }}
- group: general
  desc: List all AllExtendedRights privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:AllExtendedRights]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has AllExtendedRights over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all AllExtendedRights privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:AllExtendedRights]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has AllExtendedRights over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all AllowedToAct privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:AllowedToAct]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has AllowedToAct over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all AllowedToAct privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:AllowedToAct]->(m:Computer)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has AllowedToAct over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all AS-REP roastable users
  cypher: |-
    MATCH (u:User {dontreqpreauth: true})
    RETURN u.name AS u_name
    ORDER BY u.name
  msg_template: |-
    User {{ u_name }} is AS-REP roastable
- group: general
  desc: List all AS-REP roastable users for owned principals
  cypher: |-
    MATCH (u:User {dontreqpreauth: true, owned: true})
    RETURN u.name AS u_name
    ORDER BY u.name
  msg_template: |-
    User {{ u_name }} is AS-REP roastable
- group: general
  desc: List all CanPSRemote privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:CanPSRemote]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has CanPSRemote over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all CanPSRemote privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:CanPSRemote]->(m:Computer)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has CanPSRemote over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all computer AddKeyCredentialLink privileges
  cypher: |-
    MATCH (n:Computer)-[r:AddKeyCredentialLink]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has AddKeyCredentialLink over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1]
    }})
- group: general
  desc: List all computer AddMember privileges
  cypher: |-
    MATCH (n:Computer)-[r:AddMember]->(m:Group)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} can add members to {{ m_name }}
- group: general
  desc: List all computer AddSelf privileges
  cypher: |-
    MATCH (n:Computer)-[r:AddSelf]->(m:Group)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} can add itself to {{ m_name }}
- group: general
  desc: List all computer AdminTo privileges
  cypher: |-
    MATCH p=(m:Computer)-[r:AdminTo]->(n:Computer)
    RETURN m.name AS m_name, n.name AS n_name
    ORDER BY m.name
  msg_template: |-
    Computer {{ m_name }} is AdminTo {{ n_name }}
- group: general
  desc: List all computer AllExtendedRights privileges
  cypher: |-
    MATCH (n:Computer)-[r:AllExtendedRights]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has AllExtendedRights over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1]
    }})
- group: general
  desc: List all computer AllowedToAct privileges
  cypher: |-
    MATCH (n:Computer)-[r:AllowedToAct]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} is AllowedToAct for {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all computer CanPSRemote privileges
  cypher: |-
    MATCH (n:Computer)-[r:CanPSRemote]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} can PSRemote to {{ m_name }}
- group: general
  desc: List all computer Constrained Delegation
  cypher: |-
    MATCH (c1:Computer)-[:AllowedToDelegate]->(c2:Computer)
    RETURN c1.name AS c1_name, c2.name AS c2_name
    ORDER BY c1.name
  msg_template: |-
    Computer {{ c1_name }} is allowed to delegate for {{ c2_name }}
- group: general
  desc: List all computer cross-domain DCSync privileges
  cypher: |-
    MATCH p=(n:Computer)-[r:DCSync]->(m:Domain)
    WHERE n.domain <> m.name
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has DCSync privileges for {{ m_name }}
- group: general
  desc: List all computer DCSync privileges
  cypher: |-
    MATCH (n:Computer)-[r:DCSync]->(m:Domain)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has DCSync privileges for {{ m_name }}
- group: general
  desc: List all computer DumpSMSAPassword privileges
  cypher: |-
    MATCH (n:Computer)-[r:DumpSMSAPassword]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has DumpSMSAPassword over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all computer ExecuteDCOM privileges
  cypher: |-
    MATCH (n:Computer)-[r:ExecuteDCOM]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} can ExecuteDCOM on {{ m_name }}
- group: general
  desc: List all computer ForceChangePassword privileges
  cypher: |-
    MATCH (n:Computer)-[r:ForceChangePassword]->(m:User)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} can force change password for {{ m_name }}
- group: general
  desc: List all computer GenericAll privileges
  cypher: |-
    MATCH (n:Computer)-[r:GenericAll]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has GenericAll over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all computer GenericWrite privileges
  cypher: |-
    MATCH (n:Computer)-[r:GenericWrite]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has GenericWrite over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all computer HasSIDHistory privileges
  cypher: |-
    MATCH (n:Computer)-[r:HasSIDHistory]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has HasSIDHistory over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all computer memberships
  cypher: |-
    MATCH (n:Computer)-[r:MemberOf]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} is MemberOf {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all computer Owns privileges
  cypher: |-
    MATCH (n:Computer)-[r:Owns]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} Owns {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all computer privileges
  cypher: |-
    MATCH (n:Computer)-[r]->(m)
    RETURN n.name AS n_name, TYPE(r), labels(m), m.name AS m_name
    ORDER BY TYPE(r)
  msg_template: |-
    Computer {{ n_name }} has {{ TYPE(r) }} over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all computer ReadGMSAPassword privileges
  cypher: |-
    MATCH p=(n:Computer)-[r:ReadGMSAPassword]->(m:User)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Computer {{ n_name }} can read GMSA passwords for {{ m_name }}
- group: general
  desc: List all computer ReadLAPSPassword privileges
  cypher: |-
    MATCH p=(n:Computer)-[r:ReadLAPSPassword]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Computer {{ n_name }} can read LAPS passwords for {{ m_name }}
- group: general
  desc: List all computer shortest paths to admin groups
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)admin|adm).*" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all computer shortest paths to Domain Admins
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-512" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all computer shortest paths to Domain Controllers
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-516" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all computer shortest paths to domains
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Domain))
    WHERE NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all computer shortest paths to Enterprise Admins
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-519" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all computer shortest paths to Exchange groups
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)EXCHANGE).*" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all computer shortest paths to high-value targets
  cypher: |-
    MATCH (m:Computer),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))
    WHERE NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all computer shortest paths to service groups
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)service|svc).*" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all computer shortest paths to SQL groups
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)SQL).*" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all computer shortest paths to web groups
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)WEB).*" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all computer SQLAdmin privileges
  cypher: |-
    MATCH (n:Computer)-[r:SQLAdmin]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} is SQLAdmin to {{ m_name }}
- group: general
  desc: List all computer SyncLAPSPassword privileges
  cypher: |-
    MATCH p=(n:Computer)-[r:SyncLAPSPassword]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Computer {{ n_name }} can sync LAPS passwords for {{ m_name }}
- group: general
  desc: List all computer WriteAccountRestrictions privileges
  cypher: |-
    MATCH (n:Computer)-[r:WriteAccountRestrictions]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has WriteAccountRestrictions over {{ m_name }} ({{ labels(m)[0] }}/{{
    labels(m)[1] }})
- group: general
  desc: List all computer WriteDacl privileges
  cypher: |-
    MATCH (n:Computer)-[r:WriteDacl]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has WriteDacl over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all computer WriteOwner privileges
  cypher: |-
    MATCH (n:Computer)-[r:WriteOwner]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has WriteOwner over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all computer WriteSPN privileges
  cypher: |-
    MATCH (n:Computer)-[r:WriteSPN]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has WriteSPN over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all computers
  cypher: |-
    MATCH (n:Computer)
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }}
- group: general
  desc: List all computers with an admin count
  cypher: |-
    MATCH (m:Computer {admincount: true})
    RETURN m.name AS m_name
    ORDER BY m.name
  msg_template: |-
    Computer {{ m_name }} has an admin count
- group: general
  desc: List all Containers
  cypher: |-
    MATCH (c:Container)
    RETURN c.name AS c_name
    ORDER BY c.name
  msg_template: |-
    Container {{ c_name }}
- group: general
  desc: List all DCSync privileges
  cypher: |-
    MATCH (n)-[r:DCSync]->(m:Domain)
    RETURN n.name AS n_name, labels(n), m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    ({{ labels(n)[0] }}/{{ labels(n)[1] }}) {{ n_name }} has DCSync privileges for {{ m_name }}
- group: general
  desc: List all DCSync privileges for owned principals
  cypher: |-
    MATCH p=(m {owned: true})-[r:DCSync]->(n:Domain)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER by m.name
  msg_template: |-
    {{ m_name }}({{ labels(m)[0] }}/{{ labels(m)[1] }}) has DCSync privileges for {{ n_name }}
- group: general
  desc: List all DCSync privileges for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:DCSync]->(m:Domain)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} has DCSync privileges for {{ m_name }}
- group: general
  desc: List all disabled computers
  cypher: |-
    MATCH (n:Computer {enabled: false})
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} is disabled
- group: general
  desc: List all Domain Admins
  cypher: |-
    MATCH (n:Group)
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-512"
    WITH n
    MATCH p=(n)<-[r:MemberOf*1..]-(m)
    RETURN m.name AS m_name
    ORDER BY m.name
  msg_template: |-
    User {{ m_name }} is MemberOf Domain Admins
- group: general
  desc: List all Domain Controllers
  cypher: |-
    MATCH (n:Group)
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-516"
    WITH n
    MATCH p=(n)<-[r:MemberOf*1..]-(m)
    RETURN m.name AS m_name
    ORDER BY m.name
  msg_template: |-
    Computer {{ m_name }} is a Domain Controller
- group: general
  desc: List all Domain Controllers OSs
  cypher: |-
    MATCH (n:Group)
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-516"
    WITH n
    MATCH p=(n)<-[r:MemberOf*1..]-(m)
    RETURN m.name AS m_name, m.operatingsystem AS m_operatingsystem
    ORDER BY m.name
  msg_template: |-
    Domain Controller {{ m_name }} OS {{ m_operatingsystem }}
- group: general
  desc: List all domain cross-domain DCSync privileges
  cypher: |-
    MATCH p=(n:Domain)-[r:DCSync]->(m:Domain)
    WHERE n.name <> m.name
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Domain {{ n_name }} has DCSync privileges for {{ m_name }}
- group: general
  desc: List all domain shortest paths to domains
  cypher: |-
    MATCH p=shortestPath((m:Domain)-[r*1..]->(n:Domain))
    WHERE NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NONE (r in relationships(p)
    WHERE type(r)="TrustedBy") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all domain trusts
  cypher: |-
    MATCH p=(n:Domain)-[r:TrustedBy]->(m:Domain)
    RETURN r.trusttype AS r_trusttype, n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Domain {{ n_name }} is trusted by {{ m_name }} with type {{ r_trusttype }}
- group: general
  desc: List all domains
  cypher: |-
    MATCH (n:Domain)
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    Domain {{ n_name }}
- group: general
  desc: List all Domains
  cypher: |-
    MATCH (n:Domain)
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    Domain {{ n_name }}
- group: general
  desc: List all Domains functional level
  cypher: |-
    MATCH (d:Domain)
    RETURN d.name AS d_name, d.functionallevel AS d_functionallevel
    ORDER BY d.name
  msg_template: |-
    Domain {{ d_name }} functional level {{ d_functionallevel }}
- group: general
  desc: List all DumpSMSAPassword privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:DumpSMSAPassword]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has DumpSMSAPassword over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all DumpSMSAPassword privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:DumpSMSAPassword]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has DumpSMSAPassword over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all emails
  cypher: |-
    MATCH (u:User)
    RETURN u.name AS u_name, u.email AS u_email
    ORDER BY u.name
  msg_template: |-
    User {{ u_name }} email {{ u_email }}
- group: general
  desc: List all enabled computers
  cypher: |-
    MATCH (n:Computer {enabled: true})
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} is enabled
- group: general
  desc: List all Enterprise Admins
  cypher: |-
    MATCH (n:Group)
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-519"
    WITH n
    MATCH p=(n)<-[r:MemberOf*1..]-(m)
    RETURN m.name AS m_name
    ORDER BY m.name
  msg_template: |-
    User {{ m_name }} is MemberOf Enterprise Admins
- group: general
  desc: List all ExecuteDCOM privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:ExecuteDCOM]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has ExecuteDCOM over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all ExecuteDCOM privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:ExecuteDCOM]->(m:Computer)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has ExecuteDCOM over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all ForceChangePassword privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:ForceChangePassword]->(m:User)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has ForceChangePassword over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all ForceChangePassword privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:ForceChangePassword]->(m:User)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has ForceChangePassword over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all GenericAll privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:GenericAll]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has GenericAll over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all GenericAll privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:GenericAll]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has GenericAll over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all GenericWrite privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:GenericWrite]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has GenericWrite over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all GenericWrite privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:GenericWrite]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has GenericWrite over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all GP Links
  cypher: |-
    MATCH (g1)-[:GPLink]->(g2)
    RETURN g1.name AS g1_name, g2.name AS g2_name, labels(g2)
    ORDER BY g1.name
  msg_template: |-
    GPO {{ g1_name }} is linked to {{ g2_name }} ({{ labels(g2)[0] }}/{{ labels(g2)[1] }})
- group: general
  desc: List all GPOs
  cypher: |-
    MATCH (n:GPO)
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    GPO {{ n_name }}
- group: general
  desc: List all group AddKeyCredentialLink privileges
  cypher: |-
    MATCH (n:Group)-[r:AddKeyCredentialLink]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has AddKeyCredentialLink over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1]
    }})
- group: general
  desc: List all group AddMember privileges
  cypher: |-
    MATCH (n:Group)-[r:AddMember]->(m:Group)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} can add members to {{ m_name }}
- group: general
  desc: List all group AddSelf privileges
  cypher: |-
    MATCH (n:Group)-[r:AddSelf]->(m:Group)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} can add itself to {{ m_name }}
- group: general
  desc: List all group AdminTo privileges
  cypher: |-
    MATCH p=(m:Group)-[r:AdminTo]->(n:Computer)
    RETURN m.name AS m_name, n.name AS n_name
    ORDER BY m.name
  msg_template: |-
    Group {{ m_name }} is AdminTo {{ n_name }}
- group: general
  desc: List all group AllExtendedRights privileges
  cypher: |-
    MATCH (n:Group)-[r:AllExtendedRights]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has AllExtendedRights over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group AllowedToAct privileges
  cypher: |-
    MATCH (n:Group)-[r:AllowedToAct]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} is AllowedToAct for {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group CanPSRemote privileges
  cypher: |-
    MATCH (n:Group)-[r:CanPSRemote]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} can PSRemote to {{ m_name }}
- group: general
  desc: List all group Constrained Delegation
  cypher: |-
    MATCH (g:Group)-[:AllowedToDelegate]->(c:Computer)
    RETURN g.name AS g_name, c.name AS c_name
    ORDER BY g.name
  msg_template: |-
    Group {{ g_name }} is allowed to delegate for {{ c_name }}
- group: general
  desc: List all group cross-domain DCSync privileges
  cypher: |-
    MATCH p=(n:Group)-[r:DCSync]->(m:Domain)
    WHERE n.domain <> m.name
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has DCSync privileges for {{ m_name }}
- group: general
  desc: List all group DCSync privileges
  cypher: |-
    MATCH (n:Group)-[r:DCSync]->(m:Domain)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has DCSync privileges for {{ m_name }}
- group: general
  desc: List all group descriptions
  cypher: |-
    MATCH (g:Group)
    RETURN g.name AS g_name, g.description AS g_description
    ORDER BY g.name
  msg_template: |-
    Group {{ g_name }} description {{ g_description }}
- group: general
  desc: List all group DumpSMSAPassword privileges
  cypher: |-
    MATCH (n:Group)-[r:DumpSMSAPassword]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has DumpSMSAPassword over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group ExecuteDCOM privileges
  cypher: |-
    MATCH (n:Group)-[r:ExecuteDCOM]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} can ExecuteDCOM on {{ m_name }}
- group: general
  desc: List all group ForceChangePassword privileges
  cypher: |-
    MATCH (n:Group)-[r:ForceChangePassword]->(m:User)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} can force change password for {{ m_name }}
- group: general
  desc: List all group GenericAll privileges
  cypher: |-
    MATCH (n:Group)-[r:GenericAll]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has GenericAll over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group GenericWrite privileges
  cypher: |-
    MATCH (n:Group)-[r:GenericWrite]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has GenericWrite over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group HasSIDHistory privileges
  cypher: |-
    MATCH (n:Group)-[r:HasSIDHistory]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has HasSIDHistory over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group memberships
  cypher: |-
    MATCH (n:Group)-[r:MemberOf]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} is MemberOf {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group Owns privileges
  cypher: |-
    MATCH (n:Group)-[r:Owns]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} Owns {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group privileges
  cypher: |-
    MATCH (n:Group)-[r]->(m)
    RETURN n.name AS n_name, TYPE(r), labels(m), m.name AS m_name
    ORDER BY TYPE(r)
  msg_template: |-
    Group {{ n_name }} has {{ TYPE(r) }} over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group RDP privileges
  cypher: |-
    MATCH p=(g:Group)-[:CanRDP]->(c:Computer)
    RETURN g.name AS g_name, c.name AS c_name
    ORDER BY g.name
  msg_template: |-
    Group {{ g_name }} CanRDP to {{ c_name }}
- group: general
  desc: List all group ReadGMSAPassword privileges
  cypher: |-
    MATCH p=(n:Group)-[r:ReadGMSAPassword]->(m:User)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Group {{ n_name }} can read GMSA passwords for {{ m_name }}
- group: general
  desc: List all group ReadLAPSPassword privileges
  cypher: |-
    MATCH p=(n:Group)-[r:ReadLAPSPassword]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Group {{ n_name }} can read LAPS passwords for {{ m_name }}
- group: general
  desc: List all group shortest paths to admin groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)admin|adm).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all group shortest paths to Domain Admins
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-512" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all group shortest paths to Domain Controllers
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-516" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all group shortest paths to domains
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Domain))
    WHERE NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all group shortest paths to Enterprise Admins
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-519" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all group shortest paths to Exchange groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)EXCHANGE).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all group shortest paths to high-value targets
  cypher: |-
    MATCH (m:Group),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))
    WHERE NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all group shortest paths to service groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)service|svc).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all group shortest paths to SQL groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)SQL).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all group shortest paths to web groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)WEB).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all group SQLAdmin privileges
  cypher: |-
    MATCH (n:Group)-[r:SQLAdmin]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} is SQLAdmin to {{ m_name }}
- group: general
  desc: List all group SyncLAPSPassword privileges
  cypher: |-
    MATCH p=(n:Group)-[r:SyncLAPSPassword]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Group {{ n_name }} can sync LAPS passwords for {{ m_name }}
- group: general
  desc: List all group WriteAccountRestrictions privileges
  cypher: |-
    MATCH (n:Group)-[r:WriteAccountRestrictions]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has WriteAccountRestrictions over {{ m_name }} ({{ labels(m)[0] }}/{{
    labels(m)[1] }})
- group: general
  desc: List all group WriteDacl privileges
  cypher: |-
    MATCH (n:Group)-[r:WriteDacl]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has WriteDacl over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group WriteOwner privileges
  cypher: |-
    MATCH (n:Group)-[r:WriteOwner]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has WriteOwner over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group WriteSPN privileges
  cypher: |-
    MATCH (n:Group)-[r:WriteSPN]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has WriteSPN over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group-delegated AdminTo privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[:MemberOf]->(g:Group)-[:AdminTo]->(m:Computer)
    RETURN n.name AS n_name, labels(n), m.name AS m_name, g.name AS g_name
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) is MemberOf {{ g_name }} which is AdminTo {{
    m_name }}
- group: general
  desc: List all group-delegated AdminTo privileges for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=(m:Group)-[:MemberOf]->(g:Group)-[:AdminTo]->(n:Computer)
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN m.name AS m_name, n.name AS n_name, g.name AS g_name
    ORDER BY m.name
  msg_template: |-
    Group {{ m_name }} is MemberOf {{ g_name }} which is AdminTo {{ n_name }}
- group: general
  desc: List all group-delegated privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[:MemberOf]->(g:Group),(g)-[r]->(m)
    RETURN n.name AS n_name, TYPE(r), labels(m), labels(n), m.name AS m_name, g.name AS g_name
    ORDER BY TYPE(r)
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) is MemberOf {{ g_name }} which has {{ TYPE(r)
    }} over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: computer
  desc: List all group-delegated privileges for this computer
  cypher: |-
    MATCH (n:Computer)-[:MemberOf]->(m:Group),(m)-[r]->(v)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, TYPE(r), labels(v), m.name AS m_name, v.name AS v_name
    ORDER BY m.name
  msg_template: |-
    Computer {{ n_name }} is MemberOf {{ m_name }} which has {{ TYPE(r) }} over {{ v_name }} ({{
    labels(v)[0] }}/{{ labels(v)[1] }})
- group: group
  desc: List all group-delegated privileges for this group
  cypher: |-
    MATCH (n:Group)-[:MemberOf]->(m:Group),(m)-[r]->(v)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, TYPE(r), labels(v), m.name AS m_name, v.name AS v_name
    ORDER BY m.name
  msg_template: |-
    Group {{ n_name }} is MemberOf {{ m_name }} which has {{ TYPE(r) }} over {{ v_name }} ({{
    labels(v)[0] }}/{{ labels(v)[1] }})
- group: user
  desc: List all group-delegated privileges for this user
  cypher: |-
    MATCH (n:User)-[:MemberOf]->(m:Group),(m)-[r]->(v)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, TYPE(r), labels(v), m.name AS m_name, v.name AS v_name
    ORDER BY m.name
  msg_template: |-
    User {{ n_name }} is MemberOf {{ m_name }} which has {{ TYPE(r) }} over {{ v_name }} ({{
    labels(v)[0] }}/{{ labels(v)[1] }})
- group: general
  desc: List all group-delegated privileges for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH (n:Group)-[:MemberOf]->(g:Group)-[r]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, TYPE(r), labels(m), m.name AS m_name, g.name AS g_name
    ORDER BY TYPE(r)
  msg_template: |-
    Group {{ n_name }} is MemberOf {{ g_name }} which has {{ TYPE(r) }} over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all group-delegated RDP privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[:MemberOf]->(g:Group)-[:CanRDP]->(m:Computer)
    RETURN n.name AS n_name, labels(n), m.name AS m_name, g.name AS g_name
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) is MemberOf {{ g_name }} which CanRDP to {{
    m_name }}
- group: general
  desc: List all group-delegated RDP privileges for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=(m:Group)-[:MemberOf]->(g:Group)-[:CanRDP]->(n:Computer)
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN m.name AS m_name, n.name AS n_name, g.name AS g_name
    ORDER BY m.name
  msg_template: |-
    Group {{ m_name }} is MemberOf {{ g_name }} which CanRDP to {{ n_name }}
- group: general
  desc: List all groups
  cypher: |-
    MATCH (n:Group)
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }}
- group: general
  desc: List all groups with an admin count
  cypher: |-
    MATCH (m:Group {admincount: true})
    RETURN m.name AS m_name
    ORDER BY m.name
  msg_template: |-
    Group {{ m_name }} has an admin count
- group: general
  desc: List all HasSIDHistory privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:HasSIDHistory]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has HasSIDHistory over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all HasSIDHistory privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:HasSIDHistory]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has HasSIDHistory over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all high-value computers
  cypher: |-
    MATCH (m:Computer {highvalue: true})
    RETURN m.name AS m_name
    ORDER BY m.name
  msg_template: |-
    Computer {{ m_name }} is high value
- group: general
  desc: List all high-value groups
  cypher: |-
    MATCH (m:Group {highvalue: true})
    RETURN m.name AS m_name
    ORDER BY m.name
  msg_template: |-
    Group {{ m_name }} is high value
- group: general
  desc: List all high-value owned principals
  cypher: |-
    MATCH (m {highvalue: true, owned: true})
    RETURN m.name AS m_name, labels(m)
    ORDER BY m.name
  msg_template: |-
    {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }}) is high value
- group: general
  desc: List all high-value principals
  cypher: |-
    MATCH p=(n {highvalue: true})
    RETURN n.name AS n_name, labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) is high value
- group: general
  desc: List all high-value users
  cypher: |-
    MATCH (m:User {highvalue: true})
    RETURN m.name AS m_name
    ORDER BY m.name
  msg_template: |-
    User {{ m_name }} is high value
- group: general
  desc: List all high-value users
  cypher: |-
    MATCH (m:User {highvalue: true})
    RETURN m.name AS m_name
    ORDER BY m.name
  msg_template: |-
    User {{ m_name }} is high value
- group: general
  desc: List all kerberoastable users
  cypher: |-
    MATCH (n:User {hasspn: true})
    RETURN n.name AS result
    ORDER BY n.name
  msg_template: |-
    User {{ result }} is kerberoastable
- group: general
  desc: List all kerberoastable users for owned principals
  cypher: |-
    MATCH (n:User {owned: true, hasspn: true})
    RETURN n.name AS result
    ORDER BY n.name
  msg_template: |-
    User {{ result }} is kerberoastable
- group: general
  desc: List all members of high-value groups
  cypher: |-
    MATCH p=(n:User)-[r:MemberOf*1..]->(m:Group {highvalue: true})
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} is MemberOf high value group {{ m_name }}
- group: general
  desc: List all members of high-value groups for owned principals
  cypher: |-
    MATCH p=(n {owned: true})-[r:MemberOf*1..]->(m:Group {highvalue: true})
    RETURN n.name AS n_name, m.name AS m_name, labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) is MemberOf high value group {{ m_name }}
- group: general
  desc: List all memberships for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:MemberOf]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has MemberOf over {{ m_name }} ({{ labels(m)[0]
    }}/{{ labels(m)[1] }})
- group: general
  desc: List all memberships for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:MemberOf]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has MemberOf over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all object control over Containers
  cypher: |-
    MATCH (n)-[r:Owns|AllExtendedRights|WriteDacl|GenericAll|WriteOwner|GenericWrite]->(c:Container)
    RETURN n.name AS n_name, c.name AS c_name, TYPE(r), labels(n)
    ORDER BY n.name
  msg_template: |-
    ({{ labels(n)[0] }}/{{ labels(n)[1] }}) {{ n_name }} has {{ TYPE(r) }} over Container {{ c_name }}
- group: general
  desc: List all object control over Containers for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:Owns|AllExtendedRights|WriteDacl|GenericAll|WriteOwner|GenericWrite]->(c:Container)
    RETURN n.name AS n_name, c.name AS c_name, TYPE(r), labels(n)
    ORDER BY n.name
  msg_template: |-
    ({{ labels(n)[0] }}/{{ labels(n)[1] }}) {{ n_name }} has {{ TYPE(r) }} over Container {{ c_name }}
- group: general
  desc: List all object control over GPOs
  cypher: |-
    MATCH (n)-[r:Owns|AllExtendedRights|WriteDacl|GenericAll|WriteOwner|GenericWrite]->(g:GPO)
    RETURN n.name AS n_name, g.name AS g_name, TYPE(r), labels(n)
    ORDER BY n.name
  msg_template: |-
    ({{ labels(n)[0] }}/{{ labels(n)[1] }}) {{ n_name }} has {{ TYPE(r) }} over GPO {{ g_name }}
- group: general
  desc: List all object control over GPOs for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:Owns|AllExtendedRights|WriteDacl|GenericAll|WriteOwner|GenericWrite]->(g:GPO)
    RETURN n.name AS n_name, g.name AS g_name, TYPE(r), labels(n)
    ORDER BY n.name
  msg_template: |-
    ({{ labels(n)[0] }}/{{ labels(n)[1] }}) {{ n_name }} has {{ TYPE(r) }} over GPO {{ g_name }}
- group: general
  desc: List all object control over OUs
  cypher: |-
    MATCH (n)-[r:Owns|AllExtendedRights|WriteDacl|GenericAll|WriteOwner|GenericWrite]->(o:OU)
    RETURN n.name AS n_name, o.name AS o_name, TYPE(r), labels(n)
    ORDER BY n.name
  msg_template: |-
    ({{ labels(n)[0] }}/{{ labels(n)[1] }}) {{ n_name }} has {{ TYPE(r) }} over OU {{ o_name }}
- group: general
  desc: List all object control over OUs for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:Owns|AllExtendedRights|WriteDacl|GenericAll|WriteOwner|GenericWrite]->(o:OU)
    RETURN n.name AS n_name, o.name AS o_name, TYPE(r), labels(n)
    ORDER BY n.name
  msg_template: |-
    ({{ labels(n)[0] }}/{{ labels(n)[1] }}) {{ n_name }} has {{ TYPE(r) }} over OU {{ o_name }}
- group: general
  desc: List all OUs
  cypher: |-
    MATCH (o:OU)
    RETURN o.name AS o_name
    ORDER BY o.name
  msg_template: |-
    OU {{ o_name }}
- group: general
  desc: List all owned principals
  cypher: |-
    MATCH (m {owned: true})
    RETURN m.name AS m_name, labels(m)
    ORDER BY m.name
  msg_template: |-
    Owned principal {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all owned principals with an admin count
  cypher: |-
    MATCH (m {admincount: true, owned: true})
    RETURN labels(m), m.name AS m_name
    ORDER BY m.name
  msg_template: |-
    {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }}) has an admin count
- group: general
  desc: List all Owns privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:Owns]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has Owns over {{ m_name }} ({{ labels(m)[0]
    }}/{{ labels(m)[1] }})
- group: general
  desc: List all Owns privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:Owns]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has Owns over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r]->(m)
    RETURN n.name AS n_name, TYPE(r), labels(m), labels(n), m.name AS m_name
    ORDER BY TYPE(r)
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has {{ TYPE(r) }} over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: computer
  desc: List all privileges for this computer
  cypher: |-
    MATCH (n:Computer)-[r]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, TYPE(r), labels(m), m.name AS m_name
    ORDER BY TYPE(r)
  msg_template: |-
    Computer {{ n_name }} has {{ TYPE(r) }} over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: group
  desc: List all privileges for this group
  cypher: |-
    MATCH (n:Group)-[r:AdminTo|HasSession|ForceChangePassword|AddMember|AddSelf|CanPSRemote|ExecuteDCOM|SQLAdmin|AllowedToDelegate|GenericAll|GenericWrite|WriteDacl|HasSIDHistory|DumpSMSAPassword|WriteSPN|WriteAccountRestrictions|Owns|AddKeyCredentialLink|ReadLAPSPassword|SyncLAPSPassword|ReadGMSAPassword|AllExtendedRights|AllowedToAct]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, TYPE(r), labels(m), m.name AS m_name
    ORDER BY TYPE(r)
  msg_template: |-
    Group {{ n_name }} has {{ TYPE(r) }} over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all privileges for this user
  cypher: |-
    MATCH (n:User)-[r]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, TYPE(r), labels(m), m.name AS m_name
    ORDER BY TYPE(r)
  msg_template: |-
    User {{ n_name }} has {{ TYPE(r) }} over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all privileges for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH (n:Group)-[r]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, TYPE(r), labels(m), m.name AS m_name
    ORDER BY TYPE(r)
  msg_template: |-
    Group {{ n_name }} has {{ TYPE(r) }} over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all RDP privileges for owned principals
  cypher: |-
    MATCH p=(m {owned: true})-[:CanRDP]->(c:Computer)
    RETURN m.name AS m_name, c.name AS c_name, labels(m)
    ORDER BY m.name
  msg_template: |-
    {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }}) CanRDP to {{ c_name }}
- group: general
  desc: List all RDP privileges for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=(g:Group)-[:CanRDP]->(c:Computer)
    WHERE (g.objectid =~ "(?i)S-1-5-21-.*-513" OR g.objectid =~ "(?i).*-S-1-5-11" OR g.objectid =~ "(?i).*-S-1-1-0" OR g.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN g.name AS g_name, c.name AS c_name
    ORDER BY g.name
  msg_template: |-
    Group {{ g_name }} CanRDP to {{ c_name }}
- group: general
  desc: List all ReadGMSAPassword privileges for owned principals
  cypher: |-
    MATCH p=(m {owned: true})-[r:ReadGMSAPassword]->(n:User)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER by m.name
  msg_template: |-
    {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }}) can read GMSA passwords for {{ n_name }}
- group: general
  desc: List all ReadGMSAPassword privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:ReadGMSAPassword]->(m:User)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} can read GMSA passwords for {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all ReadLAPSPassword privileges for owned principals
  cypher: |-
    MATCH p=(m {owned: true})-[r:ReadLAPSPassword]->(n:Computer)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER by m.name
  msg_template: |-
    {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }}) can read LAPS passwords for {{ n_name }}
- group: general
  desc: List all ReadLAPSPassword privileges for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=(n:Group)-[r:ReadLAPSPassword]->(m:Computer)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Group {{ n_name }} can read LAPS passwords for {{ m_name }}
- group: general
  desc: List all sensitive users
  cypher: |-
    MATCH (m:User {sensitive: true})
    RETURN m.name AS m_name
    ORDER BY m.name
  msg_template: |-
    User {{ m_name }} is sensitive
- group: general
  desc: List all sessions
  cypher: |-
    MATCH p=(m:Computer)-[r:HasSession]->(n:User)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} HasSession on {{ m_name }}
- group: general
  desc: List all sessions for owned principals
  cypher: |-
    MATCH p=(m:Computer)-[r:HasSession]->(n:User {owned: true})
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} HasSession on {{ m_name }}
- group: general
  desc: List all shortest paths to admin groups for owned principals
  cypher: |-
    MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)admin|adm).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: computer
  desc: List all shortest paths to admin groups for this computer
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)admin|adm).*" AND m.name =~ '((?i)COMPUTER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: group
  desc: List all shortest paths to admin groups for this group
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)admin|adm).*" AND NOT m=n AND m.name =~ '((?i)GROUP_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: user
  desc: List all shortest paths to admin groups for this user
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)admin|adm).*" AND m.name =~ '((?i)USER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to admin groups for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND n.name =~ ".*((?i)admin|adm).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to Domain Admins for owned principals
  cypher: |-
    MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-512" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: computer
  desc: List all shortest paths to Domain Admins for this computer
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-512" AND m.name =~ '((?i)COMPUTER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: group
  desc: List all shortest paths to Domain Admins for this group
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-512" AND NOT m=n AND m.name =~ '((?i)GROUP_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: user
  desc: List all shortest paths to Domain Admins for this user
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-512" AND m.name =~ '((?i)USER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to Domain Admins for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND n.objectid =~ "(?i)S-1-5-21-.*-512" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to Domain Controllers for owned principals
  cypher: |-
    MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-516" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: computer
  desc: List all shortest paths to Domain Controllers for this computer
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-516" AND m.name =~ '((?i)COMPUTER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: group
  desc: List all shortest paths to Domain Controllers for this group
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-516" AND NOT m=n AND m.name =~ '((?i)GROUP_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: user
  desc: List all shortest paths to Domain Controllers for this user
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-516" AND m.name =~ '((?i)USER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to Domain Controllers for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND n.objectid =~ "(?i)S-1-5-21-.*-516" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to domains for owned principals
  cypher: |-
    MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Domain))
    WHERE NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to domains for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Domain))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to Enterprise Admins for owned principals
  cypher: |-
    MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-519" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: computer
  desc: List all shortest paths to Enterprise Admins for this computer
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-519" AND m.name =~ '((?i)COMPUTER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: group
  desc: List all shortest paths to Enterprise Admins for this group
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-519" AND NOT m=n AND m.name =~ '((?i)GROUP_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: user
  desc: List all shortest paths to Enterprise Admins for this user
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-519" AND m.name =~ '((?i)USER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to Enterprise Admins for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND n.objectid =~ "(?i)S-1-5-21-.*-519" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to Exchange groups for owned principals
  cypher: |-
    MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)EXCHANGE).*" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: computer
  desc: List all shortest paths to Exchange groups for this computer
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)EXCHANGE).*" AND m.name =~ '((?i)COMPUTER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: group
  desc: List all shortest paths to Exchange groups for this group
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)EXCHANGE).*" AND NOT m=n AND m.name =~ '((?i)GROUP_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: user
  desc: List all shortest paths to Exchange groups for this user
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)EXCHANGE).*" AND m.name =~ '((?i)USER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to Exchange groups for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND n.name =~ ".*((?i)EXCHANGE).*" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to high-value targets for owned principals
  cypher: |-
    MATCH (m {owned: true}),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))
    WHERE NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: computer
  desc: List all shortest paths to high-value targets for this computer
  cypher: |-
    MATCH (m:Computer),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))
    WHERE NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n AND m.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: group
  desc: List all shortest paths to high-value targets for this group
  cypher: |-
    MATCH (m:Group),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))
    WHERE NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n AND m.name =~ '((?i)GROUP_SEARCH)'
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: user
  desc: List all shortest paths to high-value targets for this user
  cypher: |-
    MATCH (m:User),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))
    WHERE NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n AND m.name =~ '((?i)USER_SEARCH)'
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to high-value targets for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH (m:Group),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to service groups for owned principals
  cypher: |-
    MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)service|svc).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: computer
  desc: List all shortest paths to service groups for this computer
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)service|svc).*" AND m.name =~ '((?i)COMPUTER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: group
  desc: List all shortest paths to service groups for this group
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)service|svc).*" AND NOT m=n AND m.name =~ '((?i)GROUP_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: user
  desc: List all shortest paths to service groups for this user
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)service|svc).*" AND m.name =~ '((?i)USER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to service groups for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND n.name =~ ".*((?i)service|svc).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to SQL groups for owned principals
  cypher: |-
    MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)SQL).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: computer
  desc: List all shortest paths to sql groups for this computer
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)SQL).*" AND m.name =~ '((?i)COMPUTER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: group
  desc: List all shortest paths to sql groups for this group
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)SQL).*" AND NOT m=n AND m.name =~ '((?i)GROUP_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: user
  desc: List all shortest paths to sql groups for this user
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)SQL).*" AND m.name =~ '((?i)USER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to SQL groups for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND n.name =~ ".*((?i)SQL).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: computer
  desc: List all shortest paths to this computer
  cypher: |-
    MATCH p=shortestPath((m)-[r*1..]->(n:Computer))
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)' AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: computer
  desc: List all shortest paths to this computer for owned principals
  cypher: |-
    MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Computer))
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)' AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: computer
  desc: List all shortest paths to this computer for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Computer))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND n.name =~ '((?i)COMPUTER_SEARCH)' AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: group
  desc: List all shortest paths to this group
  cypher: |-
    MATCH p=shortestPath((m)-[r*1..]->(n:Group))
    WHERE n.name =~ '((?i)GROUP_SEARCH)' AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: group
  desc: List all shortest paths to this group for owned principals
  cypher: |-
    MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))
    WHERE n.name =~ '((?i)GROUP_SEARCH)' AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: group
  desc: List all shortest paths to this group for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND n.name =~ '((?i)GROUP_SEARCH)' AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: user
  desc: List all shortest paths to this user
  cypher: |-
    MATCH p=shortestPath((m)-[r*1..]->(n:User))
    WHERE n.name =~ '((?i)USER_SEARCH)' AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: user
  desc: List all shortest paths to this user for owned principals
  cypher: |-
    MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:User))
    WHERE n.name =~ '((?i)USER_SEARCH)' AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: user
  desc: List all shortest paths to this user for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:User))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND n.name =~ '((?i)USER_SEARCH)' AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to web groups for owned principals
  cypher: |-
    MATCH p=shortestPath((m {owned: true})-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)WEB).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: computer
  desc: List all shortest paths to web groups for this computer
  cypher: |-
    MATCH p=shortestPath((m:Computer)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)WEB).*" AND m.name =~ '((?i)COMPUTER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: group
  desc: List all shortest paths to web groups for this group
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)WEB).*" AND NOT m=n AND m.name =~ '((?i)GROUP_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: user
  desc: List all shortest paths to web groups for this user
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)WEB).*" AND m.name =~ '((?i)USER_SEARCH)' AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all shortest paths to web groups for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=shortestPath((m:Group)-[r*1..]->(n:Group))
    WHERE (m.objectid =~ "(?i)S-1-5-21-.*-513" OR m.objectid =~ "(?i).*-S-1-5-11" OR m.objectid =~ "(?i).*-S-1-1-0" OR m.objectid =~ "(?i).*-S-1-5-32-545") AND n.name =~ ".*((?i)WEB).*" AND NOT m=n AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all SQLAdmin privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:SQLAdmin]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has SQLAdmin over {{ m_name }} ({{ labels(m)[0]
    }}/{{ labels(m)[1] }})
- group: general
  desc: List all SQLAdmin privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:SQLAdmin]->(m:Computer)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has SQLAdmin over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all SyncLAPSPassword privileges for owned principals
  cypher: |-
    MATCH p=(m {owned: true})-[r:SyncLAPSPassword]->(n:Computer)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER by m.name
  msg_template: |-
    {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }}) can sync LAPS passwords for {{ n_name }}
- group: general
  desc: List all SyncLAPSPassword privileges for Users, Domain Users, Authenticated Users, or Everyone groups
  cypher: |-
    MATCH p=(n:Group)-[r:SyncLAPSPassword]->(m:Computer)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Group {{ n_name }} can sync LAPS passwords for {{ m_name }}
- group: general
  desc: List all Unconstrained Delegation
  cypher: |-
    MATCH (c:Computer {unconstraineddelegation: true})
    RETURN c.name AS c_name
    ORDER BY c.name
  msg_template: |-
    Computer {{ c_name }} has unconstrained delegation privilege
- group: general
  desc: List all unsupported OSs
  cypher: |-
    MATCH (H:Computer)
    WHERE H.operatingsystem =~ '.*(2000|2003|2008|xp|vista|7|me).*'
    RETURN H.name AS H_name, H.operatingsystem AS H_operatingsystem
    ORDER BY H.name
  msg_template: |-
    Computer {{ H_name }} is unsupported with OS {{ H_operatingsystem }}
- group: general
  desc: List all user AddKeyCredentialLink privileges
  cypher: |-
    MATCH (n:User)-[r:AddKeyCredentialLink]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has AddKeyCredentialLink over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all user AddMember privileges
  cypher: |-
    MATCH (n:User)-[r:AddMember]->(m:Group)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} can add members to {{ m_name }}
- group: general
  desc: List all user AddSelf privileges
  cypher: |-
    MATCH (n:User)-[r:AddSelf]->(m:Group)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} can add itself to {{ m_name }}
- group: general
  desc: List all user AdminTo privileges
  cypher: |-
    MATCH p=(m:User)-[r:AdminTo]->(n:Computer)
    RETURN m.name AS m_name, n.name AS n_name
    ORDER BY m.name
  msg_template: |-
    User {{ m_name }} is AdminTo {{ n_name }}
- group: general
  desc: List all user AllExtendedRights privileges
  cypher: |-
    MATCH (n:User)-[r:AllExtendedRights]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has AllExtendedRights over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all user AllowedToAct privileges
  cypher: |-
    MATCH (n:User)-[r:AllowedToAct]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} is AllowedToAct for {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all user CanPSRemote privileges
  cypher: |-
    MATCH (n:User)-[r:CanPSRemote]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} can PSRemote to {{ m_name }}
- group: general
  desc: List all user Constrained Delegation
  cypher: |-
    MATCH (u:User)-[:AllowedToDelegate]->(c:Computer)
    RETURN u.name AS u_name, c.name AS c_name
    ORDER BY u.name
  msg_template: |-
    User {{ u_name }} is allowed to delegate for {{ c_name }}
- group: general
  desc: List all user cross-domain DCSync privileges
  cypher: |-
    MATCH p=(n:User)-[r:DCSync]->(m:Domain)
    WHERE n.domain <> m.name
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has DCSync privileges for {{ m_name }}
- group: general
  desc: List all user DCSync privileges
  cypher: |-
    MATCH (n:User)-[r:DCSync]->(m:Domain)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has DCSync privileges for {{ m_name }}
- group: general
  desc: List all user descriptions
  cypher: |-
    MATCH (u:User)
    RETURN u.name AS u_name, u.description AS u_description
    ORDER BY u.name
  msg_template: |-
    User {{ u_name }} description {{ u_description }}
- group: general
  desc: List all user DumpSMSAPassword privileges
  cypher: |-
    MATCH (n:User)-[r:DumpSMSAPassword]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has DumpSMSAPassword over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all user ExecuteDCOM privileges
  cypher: |-
    MATCH (n:User)-[r:ExecuteDCOM]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} can ExecuteDCOM on {{ m_name }}
- group: general
  desc: List all user ForceChangePassword privileges
  cypher: |-
    MATCH (n:User)-[r:ForceChangePassword]->(m:User)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} can force change password for {{ m_name }}
- group: general
  desc: List all user GenericAll privileges
  cypher: |-
    MATCH (n:User)-[r:GenericAll]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has GenericAll over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all user GenericWrite privileges
  cypher: |-
    MATCH (n:User)-[r:GenericWrite]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has GenericWrite over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all user HasSIDHistory privileges
  cypher: |-
    MATCH (n:User)-[r:HasSIDHistory]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has HasSIDHistory over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all user memberships
  cypher: |-
    MATCH (n:User)-[r:MemberOf]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} is MemberOf {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all user Owns privileges
  cypher: |-
    MATCH (n:User)-[r:Owns]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} Owns {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all user privileges
  cypher: |-
    MATCH (n:User)-[r]->(m)
    RETURN n.name AS n_name, TYPE(r), labels(m), m.name AS m_name
    ORDER BY TYPE(r)
  msg_template: |-
    User {{ n_name }} has {{ TYPE(r) }} over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all user RDP privileges
  cypher: |-
    MATCH p=(u:User)-[:CanRDP]->(c:Computer)
    RETURN u.name AS u_name, c.name AS c_name
    ORDER BY u.name
  msg_template: |-
    User {{ u_name }} CanRDP to {{ c_name }}
- group: general
  desc: List all user ReadGMSAPassword privileges
  cypher: |-
    MATCH p=(n:User)-[r:ReadGMSAPassword]->(m:User)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    User {{ n_name }} can read GMSA passwords for {{ m_name }}
- group: general
  desc: List all user ReadLAPSPassword privileges
  cypher: |-
    MATCH p=(n:User)-[r:ReadLAPSPassword]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    User {{ n_name }} can read LAPS passwords for {{ m_name }}
- group: general
  desc: List all user shortest paths to admin groups
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)admin|adm).*" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all user shortest paths to Domain Admins
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-512" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all user shortest paths to Domain Controllers
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-516" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all user shortest paths to domains
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Domain))
    WHERE NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all user shortest paths to Enterprise Admins
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.objectid =~ "(?i)S-1-5-21-.*-519" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all user shortest paths to Exchange groups
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)EXCHANGE).*" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all user shortest paths to high-value targets
  cypher: |-
    MATCH (m:User),(n {highvalue: true}),p=shortestPath((m)-[r*1..]->(n))
    WHERE NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet") AND NOT m=n
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all user shortest paths to service groups
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)service|svc).*" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all user shortest paths to SQL groups
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)SQL).*" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all user shortest paths to web groups
  cypher: |-
    MATCH p=shortestPath((m:User)-[r*1..]->(n:Group))
    WHERE n.name =~ ".*((?i)WEB).*" AND NONE (r IN relationships(p)
    WHERE type(r)= "GetChanges") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesAll") AND NONE (r in relationships(p)
    WHERE type(r)="GetChangesInFilteredSet")
    RETURN m.name AS m_name, p
    ORDER BY m.name
  msg_template: null
- group: general
  desc: List all user SQLAdmin privileges
  cypher: |-
    MATCH (n:User)-[r:SQLAdmin]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} is SQLAdmin to {{ m_name }}
- group: general
  desc: List all user SyncLAPSPassword privileges
  cypher: |-
    MATCH p=(n:User)-[r:SyncLAPSPassword]->(m:Computer)
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    User {{ n_name }} can sync LAPS passwords for {{ m_name }}
- group: general
  desc: List all user WriteAccountRestrictions privileges
  cypher: |-
    MATCH (n:User)-[r:WriteAccountRestrictions]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has WriteAccountRestrictions over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1]
    }})
- group: general
  desc: List all user WriteDacl privileges
  cypher: |-
    MATCH (n:User)-[r:WriteDacl]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has WriteDacl over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all user WriteOwner privileges
  cypher: |-
    MATCH (n:User)-[r:WriteOwner]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has WriteOwner over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all user WriteSPN privileges
  cypher: |-
    MATCH (n:User)-[r:WriteSPN]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has WriteSPN over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all users
  cypher: |-
    MATCH (n:User)
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }}
- group: general
  desc: List all users that don't require a password
  cypher: |-
    MATCH (n:User {passwordnotreqd: true})
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} is not required to have a password
- group: general
  desc: List all users that don't require a password for owned principals
  cypher: |-
    MATCH (n:User {passwordnotreqd: true, owned: true})
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} is not required to have a password
- group: general
  desc: List all users where password never expires
  cypher: |-
    MATCH (n:User {pwdneverexpires: true})
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    User's {{ n_name }} password is set to never expire
- group: general
  desc: List all users where password never expires for owned principals
  cypher: |-
    MATCH (n:User {pwdneverexpires: true, owned: true})
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    User's {{ n_name }} password is set to never expire
- group: general
  desc: List all users with an admin count
  cypher: |-
    MATCH (m:User {admincount: true})
    RETURN m.name AS m_name
    ORDER BY m.name
  msg_template: |-
    User {{ m_name }} has an admin count
- group: general
  desc: List all WriteAccountRestrictions privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:WriteAccountRestrictions]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has WriteAccountRestrictions over {{ m_name }}
    ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all WriteAccountRestrictions privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:WriteAccountRestrictions]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has WriteAccountRestrictions over {{ m_name }} ({{ labels(m)[0] }}/{{
    labels(m)[1] }})
- group: general
  desc: List all WriteDacl privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:WriteDacl]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has WriteDacl over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all WriteDacl privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:WriteDacl]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has WriteDacl over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all WriteOwner privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:WriteOwner]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has WriteOwner over {{ m_name }} ({{
    labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all WriteOwner privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:WriteOwner]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has WriteOwner over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List all WriteSPN privileges for owned principals
  cypher: |-
    MATCH (n {owned: true})-[r:WriteSPN]->(m)
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) has WriteSPN over {{ m_name }} ({{ labels(m)[0]
    }}/{{ labels(m)[1] }})
- group: general
  desc: List all WriteSPN privileges for Users, Domain Users, Authenticated Users, and Everyone groups
  cypher: |-
    MATCH (n:Group)-[r:WriteSPN]->(m)
    WHERE (n.objectid =~ "(?i)S-1-5-21-.*-513" OR n.objectid =~ "(?i).*-S-1-5-11" OR n.objectid =~ "(?i).*-S-1-1-0" OR n.objectid =~ "(?i).*-S-1-5-32-545")
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has WriteSPN over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List computers containing "dev"
  cypher: |-
    MATCH (c:Computer)
    WHERE c.name =~ '.*((?i)dev).*'
    RETURN c.name AS c_name
    ORDER BY c.name
  msg_template: |-
    Dev computer {{ c_name }}
- group: general
  desc: List computers containing "prod"
  cypher: |-
    MATCH (c:Computer)
    WHERE c.name =~ '.*((?i)prod).*'
    RETURN c.name AS c_name
    ORDER BY c.name
  msg_template: |-
    Prod computer {{ c_name }}
- group: general
  desc: List computers containing "sql"
  cypher: |-
    MATCH (c:Computer)
    WHERE c.name =~ '.*((?i)sql).*'
    RETURN c.name AS c_name
    ORDER BY c.name
  msg_template: |-
    SQL computer {{ c_name }}
- group: general
  desc: List computers containing "web"
  cypher: |-
    MATCH (c:Computer)
    WHERE c.name =~ '.*((?i)web).*'
    RETURN c.name AS c_name
    ORDER BY c.name
  msg_template: |-
    Web computer {{ c_name }}
- group: general
  desc: List computers with LAPS disabled
  cypher: |-
    MATCH (c:Computer)
    WHERE c.haslaps = false
    RETURN c.name AS c_name
    ORDER BY c.name
  msg_template: |-
    Computer {{ c_name }} has LAPS disabled
- group: general
  desc: List computers with LAPS enabled
  cypher: |-
    MATCH (c:Computer)
    WHERE c.haslaps = true
    RETURN c.name AS c_name
    ORDER BY c.name
  msg_template: |-
    Computer {{ c_name }} has LAPS enabled
- group: general
  desc: List Domain Admin sessions
  cypher: |-
    MATCH (n:User)-[:MemberOf*1..]->(g:Group)
    WHERE g.objectid ENDS
    WITH '-512'
    MATCH p = (c:Computer)-[:HasSession]->(n)
    RETURN n.name AS n_name, c.name AS c_name
    ORDER BY n.name
  msg_template: |-
    Domain admin {{ n_name }} HasSession on {{ c_name }}
- group: general
  desc: List Enterprise Admin sessions
  cypher: |-
    MATCH (n:User)-[:MemberOf*1..]->(g:Group)
    WHERE g.objectid ENDS
    WITH '-519'
    MATCH p = (c:Computer)-[:HasSession]->(n)
    RETURN n.name AS n_name, c.name AS c_name
    ORDER BY n.name
  msg_template: |-
    Enterprise admin {{ n_name }} HasSession on {{ c_name }}
- group: general
  desc: List groups containing "admin"
  cypher: |-
    MATCH (g:Group)
    WHERE g.name =~ '.*((?i)admin|adm).*'
    RETURN g.name AS g_name
    ORDER BY g.name
  msg_template: |-
    Admin group {{ g_name }}
- group: general
  desc: List groups containing "dev"
  cypher: |-
    MATCH (g:Group)
    WHERE g.name =~ '.*((?i)dev).*'
    RETURN g.name AS g_name
    ORDER BY g.name
  msg_template: |-
    Dev group {{ g_name }}
- group: general
  desc: List groups containing "prod"
  cypher: |-
    MATCH (g:Group)
    WHERE g.name =~ '.*((?i)prod).*'
    RETURN g.name AS g_name
    ORDER BY g.name
  msg_template: |-
    Prod group {{ g_name }}
- group: general
  desc: List groups containing "sql"
  cypher: |-
    MATCH (g:Group)
    WHERE g.name =~ '.*((?i)sql).*'
    RETURN g.name AS g_name
    ORDER BY g.name
  msg_template: |-
    SQL group {{ g_name }}
- group: general
  desc: List groups containing "svc/service"
  cypher: |-
    MATCH (g:Group)
    WHERE g.name =~ '.*((?i)svc|service).*'
    RETURN g.name AS g_name
    ORDER BY g.name
  msg_template: |-
    Service group {{ g_name }}
- group: general
  desc: List groups containing "web"
  cypher: |-
    MATCH (g:Group)
    WHERE g.name =~ '.*((?i)web).*'
    RETURN g.name AS g_name
    ORDER BY g.name
  msg_template: |-
    Web group {{ g_name }}
- group: user
  desc: List if this user's AS-REP roastable
  cypher: |-
    MATCH (u:User {dontreqpreauth: true})
    WHERE u.name =~ '((?i)USER_SEARCH)'
    RETURN u.name AS u_name
  msg_template: |-
    User {{ u_name }} is AS-REP roastable
- group: user
  desc: List if this user's kerberoastable
  cypher: |-
    MATCH (n:User)
    WHERE n.hasspn=true AND n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS result
    ORDER BY n.name
  msg_template: |-
    User {{ result }} is kerberoastable
- group: general
  desc: List potential passwords in descriptions
  cypher: |-
    MATCH (u:User)
    WHERE u.description =~ '.*((?i)pass|pw|:).*'
    RETURN u.name AS u_name, u.description AS u_description
    ORDER BY u.name
  msg_template: |-
    User {{ u_name }} may have password in description {{ u_description }}
- group: computer
  desc: List this computer's AddKeyCredentialLink privileges
  cypher: |-
    MATCH (n:Computer)-[r:AddKeyCredentialLink]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has AddKeyCredentialLink over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1]
    }})
- group: computer
  desc: List this computer's AddMember privileges
  cypher: |-
    MATCH (n:Computer)-[r:AddMember]->(m:Group)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} can add members to {{ m_name }}
- group: computer
  desc: List this computer's AddSelf privileges
  cypher: |-
    MATCH (n:Computer)-[r:AddSelf]->(m:Group)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} can add itself to {{ m_name }}
- group: computer
  desc: List this computer's AdminTo privileges
  cypher: |-
    MATCH p=(m:Computer)-[r:AdminTo]->(n:Computer)
    WHERE m.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN m.name AS m_name, n.name AS n_name
    ORDER BY m.name
  msg_template: |-
    Computer {{ m_name }} is AdminTo {{ n_name }}
- group: computer
  desc: List this computer's AllExtendedRights privileges
  cypher: |-
    MATCH (n:Computer)-[r:AllExtendedRights]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has AllExtendedRights over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1]
    }})
- group: computer
  desc: List this computer's AllowedToAct privileges
  cypher: |-
    MATCH (n:Computer)-[r:AllowedToAct]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} is AllowedToAct for {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: computer
  desc: List this computer's CanPSRemote privileges
  cypher: |-
    MATCH (n:Computer)-[r:CanPSRemote]->(m:Computer)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} can PSRemote to {{ m_name }}
- group: computer
  desc: List this computer's Constrained Delegation privileges
  cypher: |-
    MATCH (n:Computer)-[:AllowedToDelegate]->(c:Computer)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, c.name AS c_name
  msg_template: |-
    Computer {{ n_name }} is allowed to delegate for {{ c_name }}
- group: computer
  desc: List this computer's DumpSMSAPassword privileges
  cypher: |-
    MATCH (n:Computer)-[r:DumpSMSAPassword]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has DumpSMSAPassword over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: computer
  desc: List this computer's ExecuteDCOM privileges
  cypher: |-
    MATCH (n:Computer)-[r:ExecuteDCOM]->(m:Computer)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} can ExecuteDCOM on {{ m_name }}
- group: computer
  desc: List this computer's ForceChangePassword privileges
  cypher: |-
    MATCH (n:Computer)-[r:ForceChangePassword]->(m:User)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} can force change password for {{ m_name }}
- group: computer
  desc: List this computer's GenericAll privileges
  cypher: |-
    MATCH (n:Computer)-[r:GenericAll]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has GenericAll over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: computer
  desc: List this computer's GenericWrite privileges
  cypher: |-
    MATCH (n:Computer)-[r:GenericWrite]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has GenericWrite over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: computer
  desc: List this computer's group memberships
  cypher: |-
    MATCH (n:Computer)-[r:MemberOf]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} is MemberOf {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: computer
  desc: List this computer's group-delegated AdminTo privileges
  cypher: |-
    MATCH (n:Computer)-[:MemberOf]->(m:Group),(m)-[:AdminTo]->(c:Computer)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN DISTINCT n.name AS DISTINCT_n_name, m.name AS m_name, c.name AS c_name
    ORDER BY m.name
  msg_template: |-
    Computer {{ n.name }} is MemberOf {{ m_name }} which is AdminTo {{ c_name }}
- group: computer
  desc: List this computer's HasSIDHistory privileges
  cypher: |-
    MATCH (n:Computer)-[r:HasSIDHistory]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has HasSIDHistory over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: computer
  desc: List this computer's Owns privileges
  cypher: |-
    MATCH (n:Computer)-[r:Owns]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} Owns {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: computer
  desc: List this computer's ReadGMSAPassword privileges
  cypher: |-
    MATCH p=(n:Computer)-[r:ReadGMSAPassword]->(m:User)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Computer {{ n_name }} can read GMSA passwords for {{ m_name }}
- group: computer
  desc: List this computer's ReadLAPSPassword privileges
  cypher: |-
    MATCH p=(n:Computer)-[r:ReadLAPSPassword]->(m:Computer)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Computer {{ n_name }} can read LAPS passwords for {{ m_name }}
- group: computer
  desc: List this computer's SQLAdmin privileges
  cypher: |-
    MATCH (n:Computer)-[r:SQLAdmin]->(m:Computer)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} is SQLAdmin to {{ m_name }}
- group: computer
  desc: List this computer's SyncLAPSPassword privileges
  cypher: |-
    MATCH p=(n:Computer)-[r:SyncLAPSPassword]->(m:Computer)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Computer {{ n_name }} can sync LAPS passwords for {{ m_name }}
- group: computer
  desc: List this computer's WriteAccountRestrictions privileges
  cypher: |-
    MATCH (n:Computer)-[r:WriteAccountRestrictions]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has WriteAccountRestrictions over {{ m_name }} ({{ labels(m)[0] }}/{{
    labels(m)[1] }})
- group: computer
  desc: List this computer's WriteDacl privileges
  cypher: |-
    MATCH (n:Computer)-[r:WriteDacl]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has WriteDacl over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: computer
  desc: List this computer's WriteOwner privileges
  cypher: |-
    MATCH (n:Computer)-[r:WriteOwner]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has WriteOwner over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: computer
  desc: List this computer's WriteSPN privileges
  cypher: |-
    MATCH (n:Computer)-[r:WriteSPN]->(m)
    WHERE n.name =~ '((?i)COMPUTER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} has WriteSPN over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: group
  desc: List this group's AddKeyCredentialLink privileges
  cypher: |-
    MATCH (n:Group)-[r:AddKeyCredentialLink]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has AddKeyCredentialLink over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1]
    }})
- group: group
  desc: List this group's AddMember privileges
  cypher: |-
    MATCH (n:Group)-[r:AddMember]->(m:Group)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} can add members to {{ m_name }}
- group: group
  desc: List this group's AddSelf privileges
  cypher: |-
    MATCH (n:Group)-[r:AddSelf]->(m:Group)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} can add itself to {{ m_name }}
- group: group
  desc: List this group's AdminTo privileges
  cypher: |-
    MATCH p=(m:Group)-[r:AdminTo]->(n:Computer)
    WHERE m.name =~ '((?i)GROUP_SEARCH)'
    RETURN m.name AS m_name, n.name AS n_name
    ORDER BY m.name
  msg_template: |-
    Group {{ m_name }} is AdminTo {{ n_name }}
- group: group
  desc: List this group's AllExtendedRights privileges
  cypher: |-
    MATCH (n:Group)-[r:AllExtendedRights]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has AllExtendedRights over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: group
  desc: List this group's AllowedToAct privileges
  cypher: |-
    MATCH (n:Group)-[r:AllowedToAct]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} is AllowedToAct for {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: group
  desc: List this group's CanPSRemote privileges
  cypher: |-
    MATCH (n:Group)-[r:CanPSRemote]->(m:Computer)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} can PSRemote to {{ m_name }}
- group: group
  desc: List this group's Constrained Delegation privileges
  cypher: |-
    MATCH (g:Group)-[:AllowedToDelegate]->(c:Computer)
    WHERE g.name =~ '((?i)GROUP_SEARCH)'
    RETURN g.name AS g_name, c.name AS c_name
  msg_template: |-
    Group {{ g_name }} is allowed to delegate for {{ c_name }}
- group: group
  desc: List this group's description
  cypher: |-
    MATCH (g:Group)
    WHERE g.name =~ '((?i)GROUP_SEARCH)'
    RETURN g.name AS g_name, g.description AS g_description
    ORDER BY g.name
  msg_template: |-
    Group {{ g_name }} description {{ g_description }}
- group: group
  desc: List this group's DumpSMSAPassword privileges
  cypher: |-
    MATCH (n:Group)-[r:DumpSMSAPassword]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has DumpSMSAPassword over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: group
  desc: List this group's ExecuteDCOM privileges
  cypher: |-
    MATCH (n:Group)-[r:ExecuteDCOM]->(m:Computer)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} can ExecuteDCOM on {{ m_name }}
- group: group
  desc: List this group's ForceChangePassword privileges
  cypher: |-
    MATCH (n:Group)-[r:ForceChangePassword]->(m:User)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} can force change password for {{ m_name }}
- group: group
  desc: List this group's GenericAll privileges
  cypher: |-
    MATCH (n:Group)-[r:GenericAll]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has GenericAll over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: group
  desc: List this group's GenericWrite privileges
  cypher: |-
    MATCH (n:Group)-[r:GenericWrite]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has GenericWrite over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: group
  desc: List this group's group memberships
  cypher: |-
    MATCH (n:Group)-[r:MemberOf]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} is MemberOf {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: group
  desc: List this group's group-delegated AdminTo privileges
  cypher: |-
    MATCH (n:Group)-[:MemberOf]->(m:Group),(m)-[:AdminTo]->(c:Computer)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN DISTINCT n.name AS DISTINCT_n_name, m.name AS m_name, c.name AS c_name
    ORDER BY m.name
  msg_template: |-
    Group {{ n.name }} is MemberOf {{ m_name }} which is AdminTo {{ c_name }}
- group: group
  desc: List this group's group-delegated RDP privileges
  cypher: |-
    MATCH (n:Group)-[:MemberOf]->(m:Group),(m)-[:CanRDP]->(c:Computer)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN DISTINCT n.name AS DISTINCT_n_name, m.name AS m_name, c.name AS c_name
    ORDER BY m.name
  msg_template: |-
    Group {{ n.name }} is MemberOf {{ m_name }} which CanRDP to {{ c_name }}
- group: group
  desc: List this group's HasSIDHistory privileges
  cypher: |-
    MATCH (n:Group)-[r:HasSIDHistory]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has HasSIDHistory over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: group
  desc: List this group's members
  cypher: |-
    MATCH (n)-[r:MemberOf]->(m)
    WHERE m.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m), labels(n)
    ORDER BY n.name
  msg_template: |-
    {{ n_name }} ({{ labels(n)[0] }}/{{ labels(n)[1] }}) is MemberOf {{ m_name }} ({{ labels(m)[0] }}/{{
    labels(m)[1] }})
- group: group
  desc: List this group's Owns privileges
  cypher: |-
    MATCH (n:Group)-[r:Owns]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} Owns {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: group
  desc: List this group's RDP privileges
  cypher: |-
    MATCH p=(g:Group)-[:CanRDP]->(c:Computer)
    WHERE g.name =~ '((?i)GROUP_SEARCH)'
    RETURN g.name AS g_name, c.name AS c_name
  msg_template: |-
    Group {{ g_name }} CanRDP to {{ c_name }}
- group: group
  desc: List this group's ReadGMSAPassword privileges
  cypher: |-
    MATCH p=(n:Group)-[r:ReadGMSAPassword]->(m:User)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Group {{ n_name }} can read GMSA passwords for {{ m_name }}
- group: group
  desc: List this group's ReadLAPSPassword privileges
  cypher: |-
    MATCH p=(n:Group)-[r:ReadLAPSPassword]->(m:Computer)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Group {{ n_name }} can read LAPS passwords for {{ m_name }}
- group: group
  desc: List this group's SQLAdmin privileges
  cypher: |-
    MATCH (n:Group)-[r:SQLAdmin]->(m:Computer)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} is SQLAdmin to {{ m_name }}
- group: group
  desc: List this group's SyncLAPSPassword privileges
  cypher: |-
    MATCH p=(n:Group)-[r:SyncLAPSPassword]->(m:Computer)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    Group {{ n_name }} can sync LAPS passwords for {{ m_name }}
- group: group
  desc: List this group's WriteAccountRestrictions privileges
  cypher: |-
    MATCH (n:Group)-[r:WriteAccountRestrictions]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has WriteAccountRestrictions over {{ m_name }} ({{ labels(m)[0] }}/{{
    labels(m)[1] }})
- group: group
  desc: List this group's WriteDacl privileges
  cypher: |-
    MATCH (n:Group)-[r:WriteDacl]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has WriteDacl over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: group
  desc: List this group's WriteOwner privileges
  cypher: |-
    MATCH (n:Group)-[r:WriteOwner]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has WriteOwner over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: group
  desc: List this group's WriteSPN privileges
  cypher: |-
    MATCH (n:Group)-[r:WriteSPN]->(m)
    WHERE n.name =~ '((?i)GROUP_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} has WriteSPN over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: user
  desc: List this user's AddKeyCredentialLink privileges
  cypher: |-
    MATCH (n:User)-[r:AddKeyCredentialLink]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has AddKeyCredentialLink over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: user
  desc: List this user's AddMember privileges
  cypher: |-
    MATCH (n:User)-[r:AddMember]->(m:Group)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} can add members to {{ m_name }}
- group: user
  desc: List this user's AddSelf privileges
  cypher: |-
    MATCH (n:User)-[r:AddSelf]->(m:Group)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} can add itself to {{ m_name }}
- group: user
  desc: List this user's AdminTo privileges
  cypher: |-
    MATCH p=(m:User)-[r:AdminTo]->(n:Computer)
    WHERE m.name =~ '((?i)USER_SEARCH)'
    RETURN m.name AS m_name, n.name AS n_name
    ORDER BY m.name
  msg_template: |-
    User {{ m_name }} is AdminTo {{ n_name }}
- group: user
  desc: List this user's AllExtendedRights privileges
  cypher: |-
    MATCH (n:User)-[r:AllExtendedRights]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has AllExtendedRights over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: user
  desc: List this user's AllowedToAct privileges
  cypher: |-
    MATCH (n:User)-[r:AllowedToAct]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} is AllowedToAct for {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: user
  desc: List this user's CanPSRemote privileges
  cypher: |-
    MATCH (n:User)-[r:CanPSRemote]->(m:Computer)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} can PSRemote to {{ m_name }}
- group: user
  desc: List this user's Constrained Delegation privileges
  cypher: |-
    MATCH (u:User)-[:AllowedToDelegate]->(c:Computer)
    WHERE u.name =~ '((?i)USER_SEARCH)'
    RETURN u.name AS u_name, c.name AS c_name
  msg_template: |-
    User {{ u_name }} is allowed to delegate for {{ c_name }}
- group: user
  desc: List this user's description
  cypher: |-
    MATCH (u:User)
    WHERE u.name =~ '((?i)USER_SEARCH)'
    RETURN u.name AS u_name, u.description AS u_description
    ORDER BY u.name
  msg_template: |-
    User {{ u_name }} description {{ u_description }}
- group: user
  desc: List this user's DumpSMSAPassword privileges
  cypher: |-
    MATCH (n:User)-[r:DumpSMSAPassword]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has DumpSMSAPassword over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: user
  desc: List this user's email
  cypher: |-
    MATCH (u:User)
    WHERE u.name =~ '((?i)USER_SEARCH)'
    RETURN u.name AS u_name, u.email AS u_email
    ORDER BY u.name
  msg_template: |-
    User {{ u_name }} email {{ u_email }}
- group: user
  desc: List this user's ExecuteDCOM privileges
  cypher: |-
    MATCH (n:User)-[r:ExecuteDCOM]->(m:Computer)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} can ExecuteDCOM on {{ m_name }}
- group: user
  desc: List this user's ForceChangePassword privileges
  cypher: |-
    MATCH (n:User)-[r:ForceChangePassword]->(m:User)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} can force change password for {{ m_name }}
- group: user
  desc: List this user's GenericAll privileges
  cypher: |-
    MATCH (n:User)-[r:GenericAll]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has GenericAll over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: user
  desc: List this user's GenericWrite privileges
  cypher: |-
    MATCH (n:User)-[r:GenericWrite]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has GenericWrite over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: user
  desc: List this user's group memberships
  cypher: |-
    MATCH (n:User)-[r:MemberOf]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} is MemberOf {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: user
  desc: List this user's group-delegated AdminTo privileges
  cypher: |-
    MATCH (n:User)-[:MemberOf]->(m:Group),(m)-[:AdminTo]->(c:Computer)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN DISTINCT n.name AS DISTINCT_n_name, m.name AS m_name, c.name AS c_name
    ORDER BY m.name
  msg_template: |-
    User {{ n.name }} is MemberOf {{ m_name }} which is AdminTo {{ c_name }}
- group: user
  desc: List this user's group-delegated RDP privileges
  cypher: |-
    MATCH (n:User)-[:MemberOf]->(m:Group),(m)-[:CanRDP]->(c:Computer)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN DISTINCT n.name AS DISTINCT_n_name, m.name AS m_name, c.name AS c_name
    ORDER BY m.name
  msg_template: |-
    User {{ n.name }} is MemberOf {{ m_name }} which CanRDP to {{ c_name }}
- group: user
  desc: List this user's HasSIDHistory privileges
  cypher: |-
    MATCH (n:User)-[r:HasSIDHistory]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has HasSIDHistory over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: user
  desc: List this user's Owns privileges
  cypher: |-
    MATCH (n:User)-[r:Owns]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} Owns {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: user
  desc: List this user's RDP privileges
  cypher: |-
    MATCH p=(u:User)-[:CanRDP]->(c:Computer)
    WHERE u.name =~ '((?i)USER_SEARCH)'
    RETURN u.name AS u_name, c.name AS c_name
  msg_template: |-
    User {{ u_name }} CanRDP to {{ c_name }}
- group: user
  desc: List this user's ReadGMSAPassword privileges
  cypher: |-
    MATCH p=(n:User)-[r:ReadGMSAPassword]->(m:User)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    User {{ n_name }} can read GMSA passwords for {{ m_name }}
- group: user
  desc: List this user's ReadLAPSPassword privileges
  cypher: |-
    MATCH p=(n:User)-[r:ReadLAPSPassword]->(m:Computer)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    User {{ n_name }} can read LAPS passwords for {{ m_name }}
- group: user
  desc: List this user's sessions
  cypher: |-
    MATCH p=(m:Computer)-[r:HasSession]->(n:User)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
  msg_template: |-
    User {{ n_name }} HasSession on {{ m_name }}
- group: user
  desc: List this user's SQLAdmin privileges
  cypher: |-
    MATCH (n:User)-[r:SQLAdmin]->(m:Computer)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} is SQLAdmin to {{ m_name }}
- group: user
  desc: List this user's SyncLAPSPassword privileges
  cypher: |-
    MATCH p=(n:User)-[r:SyncLAPSPassword]->(m:Computer)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name
    ORDER by n.name
  msg_template: |-
    User {{ n_name }} can sync LAPS passwords for {{ m_name }}
- group: user
  desc: List this user's WriteAccountRestrictions privileges
  cypher: |-
    MATCH (n:User)-[r:WriteAccountRestrictions]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has WriteAccountRestrictions over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1]
    }})
- group: user
  desc: List this user's WriteDacl privileges
  cypher: |-
    MATCH (n:User)-[r:WriteDacl]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has WriteDacl over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: user
  desc: List this user's WriteOwner privileges
  cypher: |-
    MATCH (n:User)-[r:WriteOwner]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has WriteOwner over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: user
  desc: List this user's WriteSPN privileges
  cypher: |-
    MATCH (n:User)-[r:WriteSPN]->(m)
    WHERE n.name =~ '((?i)USER_SEARCH)'
    RETURN n.name AS n_name, m.name AS m_name, labels(m)
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} has WriteSPN over {{ m_name }} ({{ labels(m)[0] }}/{{ labels(m)[1] }})
- group: general
  desc: List users containing "admin"
  cypher: |-
    MATCH (u:User)
    WHERE u.name =~ '.*((?i)admin|adm).*'
    RETURN u.name AS u_name
    ORDER BY u.name
  msg_template: |-
    Admin user {{ u_name }}
- group: general
  desc: List users containing "dev"
  cypher: |-
    MATCH (u:User)
    WHERE u.name =~ '.*((?i)dev).*'
    RETURN u.name AS u_name
    ORDER BY u.name
  msg_template: |-
    Dev user {{ u_name }}
- group: general
  desc: List users containing "prod"
  cypher: |-
    MATCH (u:User)
    WHERE u.name =~ '.*((?i)prod).*'
    RETURN u.name AS u_name
    ORDER BY u.name
  msg_template: |-
    Prod user {{ u_name }}
- group: general
  desc: List users containing "sql"
  cypher: |-
    MATCH (u:User)
    WHERE u.name =~ '.*((?i)sql).*'
    RETURN u.name AS u_name
    ORDER BY u.name
  msg_template: |-
    SQL user {{ u_name }}
- group: general
  desc: List users containing "svc/service"
  cypher: |-
    MATCH (u:User)
    WHERE u.name =~ '.*((?i)svc|service).*'
    RETURN u.name AS u_name
    ORDER BY u.name
  msg_template: |-
    Service user {{ u_name }}
- group: general
  desc: List users containing "web"
  cypher: |-
    MATCH (u:User)
    WHERE u.name =~ '.*((?i)web).*'
    RETURN u.name AS u_name
    ORDER BY u.name
  msg_template: |-
    Web user {{ u_name }}
- group: regex
  desc: Search for computers matching the regex
  cypher: |-
    MATCH (n:Computer)
    WHERE n.name =~ 'REGEX'
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }}
- group: regex
  desc: Search for Containers matching the regex
  cypher: |-
    MATCH (n:Container)
    WHERE n.name =~ 'REGEX'
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    Container {{ n_name }}
- group: regex
  desc: Search for GPOs matching the regex
  cypher: |-
    MATCH (n:GPO)
    WHERE n.name =~ 'REGEX'
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    GPO {{ n_name }}
- group: regex
  desc: Search for group descriptions matching the regex
  cypher: |-
    MATCH (n:Group)
    WHERE n.description =~ 'REGEX'
    RETURN n.name AS n_name, n.description AS n_description
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }} description {{ n_description }}
- group: regex
  desc: Search for groups matching the regex
  cypher: |-
    MATCH (n:Group)
    WHERE n.name =~ 'REGEX'
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    Group {{ n_name }}
- group: regex
  desc: Search for OSs matching the regex
  cypher: |-
    MATCH (n:Computer)
    WHERE n.operatingsystem =~ 'REGEX'
    RETURN n.name AS n_name, n.operatingsystem AS n_operatingsystem
    ORDER BY n.name
  msg_template: |-
    Computer {{ n_name }} OS {{ n_operatingsystem }}
- group: regex
  desc: Search for OUs matching the regex
  cypher: |-
    MATCH (n:OU)
    WHERE n.name =~ 'REGEX'
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    OU {{ n_name }}
- group: regex
  desc: Search for user descriptions matching the regex
  cypher: |-
    MATCH (n:User)
    WHERE n.description =~ 'REGEX'
    RETURN n.name AS n_name, n.description AS n_description
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }} description {{ n_description }}
- group: regex
  desc: Search for users matching the regex
  cypher: |-
    MATCH (n:User)
    WHERE n.name =~ 'REGEX'
    RETURN n.name AS n_name
    ORDER BY n.name
  msg_template: |-
    User {{ n_name }}
